{"ast":null,"code":"import { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nfunction isBoolean(fail) {\n  return typeof fail === 'boolean';\n}\nexport function usage(yargs, shim) {\n  const __ = shim.y18n.__;\n  const self = {};\n  const fails = [];\n  self.failFn = function failFn(f) {\n    fails.push(f);\n  };\n  let failMessage = null;\n  let globalFailMessage = null;\n  let showHelpOnFail = true;\n  self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n    const [enabled, message] = typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n    if (yargs.getInternalMethods().isGlobalContext()) {\n      globalFailMessage = message;\n    }\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n  let failureOutput = false;\n  self.fail = function fail(msg, err) {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        const fail = fails[i];\n        if (isBoolean(fail)) {\n          if (err) throw err;else if (msg) throw Error(msg);\n        } else {\n          fail(msg, err, self);\n        }\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true);\n      if (!failureOutput) {\n        failureOutput = true;\n        if (showHelpOnFail) {\n          yargs.showHelp('error');\n          logger.error();\n        }\n        if (msg || err) logger.error(msg || err);\n        const globalOrCommandFailMessage = failMessage || globalFailMessage;\n        if (globalOrCommandFailMessage) {\n          if (msg || err) logger.error('');\n          logger.error(globalOrCommandFailMessage);\n        }\n      }\n      err = err || new YError(msg);\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs.getInternalMethods().hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  };\n  let usages = [];\n  let usageDisabled = false;\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true;\n      usages = [];\n      return self;\n    }\n    usageDisabled = false;\n    usages.push([msg, description || '']);\n    return self;\n  };\n  self.getUsage = () => {\n    return usages;\n  };\n  self.getUsageDisabled = () => {\n    return usageDisabled;\n  };\n  self.getPositionalGroupName = () => {\n    return __('Positionals:');\n  };\n  let examples = [];\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || '']);\n  };\n  let commands = [];\n  self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n    if (isDefault) {\n      commands = commands.map(cmdArray => {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n    commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n  };\n  self.getCommands = () => commands;\n  let descriptions = {};\n  self.describe = function describe(keyOrKeys, desc) {\n    if (Array.isArray(keyOrKeys)) {\n      keyOrKeys.forEach(k => {\n        self.describe(k, desc);\n      });\n    } else if (typeof keyOrKeys === 'object') {\n      Object.keys(keyOrKeys).forEach(k => {\n        self.describe(k, keyOrKeys[k]);\n      });\n    } else {\n      descriptions[keyOrKeys] = desc;\n    }\n  };\n  self.getDescriptions = () => descriptions;\n  let epilogs = [];\n  self.epilog = msg => {\n    epilogs.push(msg);\n  };\n  let wrapSet = false;\n  let wrap;\n  self.wrap = cols => {\n    wrapSet = true;\n    wrap = cols;\n  };\n  self.getWrap = () => {\n    if (shim.getEnv('YARGS_DISABLE_WRAP')) {\n      return null;\n    }\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n    return wrap;\n  };\n  const deferY18nLookupPrefix = '__yargsString__:';\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n  self.help = function help() {\n    if (cachedHelpMessage) return cachedHelpMessage;\n    normalizeAliases();\n    const base$0 = yargs.customScriptName ? yargs.$0 : shim.path.basename(yargs.$0);\n    const demandedOptions = yargs.getDemandedOptions();\n    const demandedCommands = yargs.getDemandedCommands();\n    const deprecatedOptions = yargs.getDeprecatedOptions();\n    const groups = yargs.getGroups();\n    const options = yargs.getOptions();\n    let keys = [];\n    keys = keys.concat(Object.keys(descriptions));\n    keys = keys.concat(Object.keys(demandedOptions));\n    keys = keys.concat(Object.keys(demandedCommands));\n    keys = keys.concat(Object.keys(options.default));\n    keys = keys.filter(filterHiddenOptions);\n    keys = Object.keys(keys.reduce((acc, key) => {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    const theWrap = self.getWrap();\n    const ui = shim.cliui({\n      width: theWrap,\n      wrap: !!theWrap\n    });\n    if (!usageDisabled) {\n      if (usages.length) {\n        usages.forEach(usage => {\n          ui.div({\n            text: `${usage[0].replace(/\\$0/g, base$0)}`\n          });\n          if (usage[1]) {\n            ui.div({\n              text: `${usage[1]}`,\n              padding: [1, 0, 0, 0]\n            });\n          }\n        });\n        ui.div();\n      } else if (commands.length) {\n        let u = null;\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`;\n        } else {\n          u = `${base$0} [${__('command')}]\\n`;\n        }\n        ui.div(`${u}`);\n      }\n    }\n    if (commands.length > 1 || commands.length === 1 && !commands[0][2]) {\n      ui.div(__('Commands:'));\n      const context = yargs.getInternalMethods().getContext();\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n      if (yargs.getInternalMethods().getParserConfiguration()['sort-commands'] === true) {\n        commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n      }\n      const prefix = base$0 ? `${base$0} ` : '';\n      commands.forEach(command => {\n        const commandString = `${prefix}${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n        ui.span({\n          text: commandString,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n        }, {\n          text: command[1]\n        });\n        const hints = [];\n        if (command[2]) hints.push(`[${__('default')}]`);\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n        }\n        if (command[4]) {\n          if (typeof command[4] === 'string') {\n            hints.push(`[${__('deprecated: %s', command[4])}]`);\n          } else {\n            hints.push(`[${__('deprecated')}]`);\n          }\n        }\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    }\n    const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n    const defaultGroup = __('Options:');\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n    const isLongSwitch = sw => /^--/.test(getText(sw));\n    const displayedGroups = Object.keys(groups).filter(groupName => groups[groupName].length > 0).map(groupName => {\n      const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map(key => {\n        if (aliasKeys.includes(key)) return key;\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if ((options.alias[aliasKey] || []).includes(key)) return aliasKey;\n        }\n        return key;\n      });\n      return {\n        groupName,\n        normalizedKeys\n      };\n    }).filter(({\n      normalizedKeys\n    }) => normalizedKeys.length > 0).map(({\n      groupName,\n      normalizedKeys\n    }) => {\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [key].concat(options.alias[key] || []).map(sw => {\n          if (groupName === self.getPositionalGroupName()) return sw;else {\n            return (/^[0-9]$/.test(sw) ? options.boolean.includes(key) ? '-' : '--' : sw.length > 1 ? '--' : '-') + sw;\n          }\n        }).sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2) ? 0 : isLongSwitch(sw1) ? 1 : -1).join(', ');\n        return acc;\n      }, {});\n      return {\n        groupName,\n        normalizedKeys,\n        switches\n      };\n    });\n    const shortSwitchesUsed = displayedGroups.filter(({\n      groupName\n    }) => groupName !== self.getPositionalGroupName()).some(({\n      normalizedKeys,\n      switches\n    }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n    if (shortSwitchesUsed) {\n      displayedGroups.filter(({\n        groupName\n      }) => groupName !== self.getPositionalGroupName()).forEach(({\n        normalizedKeys,\n        switches\n      }) => {\n        normalizedKeys.forEach(key => {\n          if (isLongSwitch(switches[key])) {\n            switches[key] = addIndentation(switches[key], '-x, '.length);\n          }\n        });\n      });\n    }\n    displayedGroups.forEach(({\n      groupName,\n      normalizedKeys,\n      switches\n    }) => {\n      ui.div(groupName);\n      normalizedKeys.forEach(key => {\n        const kswitch = switches[key];\n        let desc = descriptions[key] || '';\n        let type = null;\n        if (desc.includes(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (options.boolean.includes(key)) type = `[${__('boolean')}]`;\n        if (options.count.includes(key)) type = `[${__('count')}]`;\n        if (options.string.includes(key)) type = `[${__('string')}]`;\n        if (options.normalize.includes(key)) type = `[${__('string')}]`;\n        if (options.array.includes(key)) type = `[${__('array')}]`;\n        if (options.number.includes(key)) type = `[${__('number')}]`;\n        const deprecatedExtra = deprecated => typeof deprecated === 'string' ? `[${__('deprecated: %s', deprecated)}]` : `[${__('deprecated')}]`;\n        const extra = [key in deprecatedOptions ? deprecatedExtra(deprecatedOptions[key]) : null, type, key in demandedOptions ? `[${__('required')}]` : null, options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: getText(kswitch),\n          padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        const shouldHideOptionExtras = yargs.getInternalMethods().getUsageConfiguration()['hide-types'] === true;\n        if (extra && !shouldHideOptionExtras) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    });\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(example => {\n        example[0] = example[0].replace(/\\$0/g, base$0);\n      });\n      examples.forEach(example => {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    }\n    if (epilogs.length > 0) {\n      const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n      ui.div(`${e}\\n`);\n    }\n    return ui.toString().replace(/\\s*$/, '');\n  };\n  function maxWidth(table, theWrap, modifier) {\n    let width = 0;\n    if (!Array.isArray(table)) {\n      table = Object.values(table).map(v => [v]);\n    }\n    table.forEach(v => {\n      width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n    });\n    if (theWrap) width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n    return width;\n  }\n  function normalizeAliases() {\n    const demandedOptions = yargs.getDemandedOptions();\n    const options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(key => {\n      options.alias[key].forEach(alias => {\n        if (descriptions[alias]) self.describe(key, descriptions[alias]);\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]);\n        if (options.boolean.includes(alias)) yargs.boolean(key);\n        if (options.count.includes(alias)) yargs.count(key);\n        if (options.string.includes(alias)) yargs.string(key);\n        if (options.normalize.includes(alias)) yargs.normalize(key);\n        if (options.array.includes(alias)) yargs.array(key);\n        if (options.number.includes(alias)) yargs.number(key);\n      });\n    });\n  }\n  let cachedHelpMessage;\n  self.cacheHelpMessage = function () {\n    cachedHelpMessage = this.help();\n  };\n  self.clearCachedHelpMessage = function () {\n    cachedHelpMessage = undefined;\n  };\n  self.hasCachedHelpMessage = function () {\n    return !!cachedHelpMessage;\n  };\n  function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n    let groupedKeys = [];\n    let toCheck = null;\n    Object.keys(groups).forEach(group => {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(key => {\n      toCheck = [key].concat(aliases[key]);\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n  function filterHiddenOptions(key) {\n    return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n  }\n  self.showHelp = level => {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n  self.functionDescription = fn => {\n    const description = fn.name ? shim.Parser.decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n  self.stringifiedValues = function stringifiedValues(values, separator) {\n    let string = '';\n    const sep = separator || ', ';\n    const array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(value => {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  };\n  function defaultString(value, defaultDescription) {\n    let string = `[${__('default:')} `;\n    if (value === undefined && !defaultDescription) return null;\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`;\n          break;\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n        default:\n          string += value;\n      }\n    }\n    return `${string}]`;\n  }\n  function windowWidth() {\n    const maxWidth = 80;\n    if (shim.process.stdColumns) {\n      return Math.min(maxWidth, shim.process.stdColumns);\n    } else {\n      return maxWidth;\n    }\n  }\n  let version = null;\n  self.version = ver => {\n    version = ver;\n  };\n  self.showVersion = level => {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(version);\n  };\n  self.reset = function reset(localLookup) {\n    failMessage = null;\n    failureOutput = false;\n    usages = [];\n    usageDisabled = false;\n    epilogs = [];\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, k => !localLookup[k]);\n    return self;\n  };\n  const frozens = [];\n  self.freeze = function freeze() {\n    frozens.push({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    });\n  };\n  self.unfreeze = function unfreeze(defaultCommand = false) {\n    const frozen = frozens.pop();\n    if (!frozen) return;\n    if (defaultCommand) {\n      descriptions = {\n        ...frozen.descriptions,\n        ...descriptions\n      };\n      commands = [...frozen.commands, ...commands];\n      usages = [...frozen.usages, ...usages];\n      examples = [...frozen.examples, ...examples];\n      epilogs = [...frozen.epilogs, ...epilogs];\n    } else {\n      ({\n        failMessage,\n        failureOutput,\n        usages,\n        usageDisabled,\n        epilogs,\n        examples,\n        commands,\n        descriptions\n      } = frozen);\n    }\n  };\n  return self;\n}\nfunction isIndentedText(text) {\n  return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n  return isIndentedText(text) ? {\n    text: text.text,\n    indentation: text.indentation + indent\n  } : {\n    text,\n    indentation: indent\n  };\n}\nfunction getIndentation(text) {\n  return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n  return isIndentedText(text) ? text.text : text;\n}","map":{"version":3,"names":["objFilter","YError","setBlocking","isBoolean","fail","usage","yargs","shim","__","y18n","self","fails","failFn","f","push","failMessage","globalFailMessage","showHelpOnFail","showHelpOnFailFn","arg1","arg2","enabled","message","getInternalMethods","isGlobalContext","failureOutput","msg","err","logger","getLoggerInstance","length","i","Error","getExitProcess","showHelp","error","globalOrCommandFailMessage","exit","hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","deprecated","map","cmdArray","getCommands","descriptions","describe","keyOrKeys","desc","Array","isArray","forEach","k","Object","keys","getDescriptions","epilogs","epilog","wrapSet","wrap","cols","getWrap","getEnv","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","help","cachedHelpMessage","normalizeAliases","base$0","customScriptName","$0","path","basename","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","deprecatedOptions","getDeprecatedOptions","groups","getGroups","options","getOptions","concat","default","filter","filterHiddenOptions","reduce","acc","key","theWrap","ui","cliui","width","div","text","replace","padding","u","_","context","getContext","parentCommands","join","getParserConfiguration","sort","a","b","localeCompare","prefix","commandString","span","maxWidth","hints","align","aliasKeys","alias","parsed","newAliases","every","indexOf","defaultGroup","addUngroupedKeys","isLongSwitch","sw","test","getText","displayedGroups","groupName","normalizedKeys","includes","aliasKey","undefined","switches","boolean","sw1","sw2","shortSwitchesUsed","some","addIndentation","kswitch","type","substring","count","string","normalize","array","number","deprecatedExtra","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","getIndentation","shouldHideOptionExtras","getUsageConfiguration","e","toString","table","modifier","values","v","Math","max","stringWidth","min","parseInt","demandOption","cacheHelpMessage","clearCachedHelpMessage","hasCachedHelpMessage","groupedKeys","toCheck","group","hiddenOptions","argv","showHiddenOpt","level","emit","functionDescription","fn","name","Parser","decamelize","separator","sep","value","JSON","stringify","process","stdColumns","version","ver","showVersion","reset","localLookup","frozens","freeze","unfreeze","defaultCommand","frozen","pop","isIndentedText","indent","indentation"],"sources":["/Users/kseniavoronova/today-i-learned-react/node_modules/yargs/build/lib/usage.js"],"sourcesContent":["import { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nfunction isBoolean(fail) {\n    return typeof fail === 'boolean';\n}\nexport function usage(yargs, shim) {\n    const __ = shim.y18n.__;\n    const self = {};\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let globalFailMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        const [enabled, message] = typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        if (yargs.getInternalMethods().isGlobalContext()) {\n            globalFailMessage = message;\n        }\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                const fail = fails[i];\n                if (isBoolean(fail)) {\n                    if (err)\n                        throw err;\n                    else if (msg)\n                        throw Error(msg);\n                }\n                else {\n                    fail(msg, err, self);\n                }\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                const globalOrCommandFailMessage = failMessage || globalFailMessage;\n                if (globalOrCommandFailMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(globalOrCommandFailMessage);\n                }\n            }\n            err = err || new YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs.getInternalMethods().hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        if (isDefault) {\n            commands = commands.map(cmdArray => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach(k => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach(k => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = msg => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = cols => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    self.getWrap = () => {\n        if (shim.getEnv('YARGS_DISABLE_WRAP')) {\n            return null;\n        }\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    };\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        const base$0 = yargs.customScriptName\n            ? yargs.$0\n            : shim.path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = self.getWrap();\n        const ui = shim.cliui({\n            width: theWrap,\n            wrap: !!theWrap,\n        });\n        if (!usageDisabled) {\n            if (usages.length) {\n                usages.forEach(usage => {\n                    ui.div({ text: `${usage[0].replace(/\\$0/g, base$0)}` });\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        if (commands.length > 1 || (commands.length === 1 && !commands[0][2])) {\n            ui.div(__('Commands:'));\n            const context = yargs.getInternalMethods().getContext();\n            const parentCommands = context.commands.length\n                ? `${context.commands.join(' ')} `\n                : '';\n            if (yargs.getInternalMethods().getParserConfiguration()['sort-commands'] ===\n                true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            const prefix = base$0 ? `${base$0} ` : '';\n            commands.forEach(command => {\n                const commandString = `${prefix}${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4,\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({\n                        text: hints.join(' '),\n                        padding: [0, 0, 0, 2],\n                        align: 'right',\n                    });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] &&\n            aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        const isLongSwitch = (sw) => /^--/.test(getText(sw));\n        const displayedGroups = Object.keys(groups)\n            .filter(groupName => groups[groupName].length > 0)\n            .map(groupName => {\n            const normalizedKeys = groups[groupName]\n                .filter(filterHiddenOptions)\n                .map(key => {\n                if (aliasKeys.includes(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if ((options.alias[aliasKey] || []).includes(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            return { groupName, normalizedKeys };\n        })\n            .filter(({ normalizedKeys }) => normalizedKeys.length > 0)\n            .map(({ groupName, normalizedKeys }) => {\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key]\n                    .concat(options.alias[key] || [])\n                    .map(sw => {\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return ((/^[0-9]$/.test(sw)\n                            ? options.boolean.includes(key)\n                                ? '-'\n                                : '--'\n                            : sw.length > 1\n                                ? '--'\n                                : '-') + sw);\n                    }\n                })\n                    .sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2)\n                    ? 0\n                    : isLongSwitch(sw1)\n                        ? 1\n                        : -1)\n                    .join(', ');\n                return acc;\n            }, {});\n            return { groupName, normalizedKeys, switches };\n        });\n        const shortSwitchesUsed = displayedGroups\n            .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n            .some(({ normalizedKeys, switches }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n        if (shortSwitchesUsed) {\n            displayedGroups\n                .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n                .forEach(({ normalizedKeys, switches }) => {\n                normalizedKeys.forEach(key => {\n                    if (isLongSwitch(switches[key])) {\n                        switches[key] = addIndentation(switches[key], '-x, '.length);\n                    }\n                });\n            });\n        }\n        displayedGroups.forEach(({ groupName, normalizedKeys, switches }) => {\n            ui.div(groupName);\n            normalizedKeys.forEach(key => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (desc.includes(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (options.boolean.includes(key))\n                    type = `[${__('boolean')}]`;\n                if (options.count.includes(key))\n                    type = `[${__('count')}]`;\n                if (options.string.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.normalize.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.array.includes(key))\n                    type = `[${__('array')}]`;\n                if (options.number.includes(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    key in deprecatedOptions\n                        ? deprecatedExtra(deprecatedOptions[key])\n                        : null,\n                    type,\n                    key in demandedOptions ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key]\n                        ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]`\n                        : null,\n                    defaultString(options.default[key], options.defaultDescription[key]),\n                ]\n                    .filter(Boolean)\n                    .join(' ');\n                ui.span({\n                    text: getText(kswitch),\n                    padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n                    width: maxWidth(switches, theWrap) + 4,\n                }, desc);\n                const shouldHideOptionExtras = yargs.getInternalMethods().getUsageConfiguration()['hide-types'] ===\n                    true;\n                if (extra && !shouldHideOptionExtras)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach(example => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach(example => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4,\n                    }, {\n                        text: example[1],\n                    });\n                }\n            });\n            ui.div();\n        }\n        if (epilogs.length > 0) {\n            const e = epilogs\n                .map(epilog => epilog.replace(/\\$0/g, base$0))\n                .join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach(v => {\n            width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n        });\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    function normalizeAliases() {\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach(key => {\n            options.alias[key].forEach(alias => {\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                if (options.boolean.includes(alias))\n                    yargs.boolean(key);\n                if (options.count.includes(alias))\n                    yargs.count(key);\n                if (options.string.includes(alias))\n                    yargs.string(key);\n                if (options.normalize.includes(alias))\n                    yargs.normalize(key);\n                if (options.array.includes(alias))\n                    yargs.array(key);\n                if (options.number.includes(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    self.hasCachedHelpMessage = function () {\n        return !!cachedHelpMessage;\n    };\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach(group => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach(key => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return (yargs.getOptions().hiddenOptions.indexOf(key) < 0 ||\n            yargs.parsed.argv[yargs.getOptions().showHiddenOpt]);\n    }\n    self.showHelp = (level) => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = fn => {\n        const description = fn.name\n            ? shim.Parser.decamelize(fn.name, '-')\n            : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach(value => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    function windowWidth() {\n        const maxWidth = 80;\n        if (shim.process.stdColumns) {\n            return Math.min(maxWidth, shim.process.stdColumns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    let version = null;\n    self.version = ver => {\n        version = ver;\n    };\n    self.showVersion = level => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(version);\n    };\n    self.reset = function reset(localLookup) {\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        });\n    };\n    self.unfreeze = function unfreeze(defaultCommand = false) {\n        const frozen = frozens.pop();\n        if (!frozen)\n            return;\n        if (defaultCommand) {\n            descriptions = { ...frozen.descriptions, ...descriptions };\n            commands = [...frozen.commands, ...commands];\n            usages = [...frozen.usages, ...usages];\n            examples = [...frozen.examples, ...examples];\n            epilogs = [...frozen.epilogs, ...epilogs];\n        }\n        else {\n            ({\n                failMessage,\n                failureOutput,\n                usages,\n                usageDisabled,\n                epilogs,\n                examples,\n                commands,\n                descriptions,\n            } = frozen);\n        }\n    };\n    return self;\n}\nfunction isIndentedText(text) {\n    return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n    return isIndentedText(text)\n        ? { text: text.text, indentation: text.indentation + indent }\n        : { text, indentation: indent };\n}\nfunction getIndentation(text) {\n    return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n    return isIndentedText(text) ? text.text : text;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}