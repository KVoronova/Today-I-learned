{"ast":null,"code":"import { isPromise } from './is-promise.js';\nexport function maybeAsyncResult(getResult, resultHandler, errorHandler = err => {\n  throw err;\n}) {\n  try {\n    const result = isFunction(getResult) ? getResult() : getResult;\n    return isPromise(result) ? result.then(result => resultHandler(result)) : resultHandler(result);\n  } catch (err) {\n    return errorHandler(err);\n  }\n}\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}","map":{"version":3,"names":["isPromise","maybeAsyncResult","getResult","resultHandler","errorHandler","err","result","isFunction","then","arg"],"sources":["/Users/kseniavoronova/today-i-learned-react/node_modules/yargs/build/lib/utils/maybe-async-result.js"],"sourcesContent":["import { isPromise } from './is-promise.js';\nexport function maybeAsyncResult(getResult, resultHandler, errorHandler = (err) => {\n    throw err;\n}) {\n    try {\n        const result = isFunction(getResult) ? getResult() : getResult;\n        return isPromise(result)\n            ? result.then((result) => resultHandler(result))\n            : resultHandler(result);\n    }\n    catch (err) {\n        return errorHandler(err);\n    }\n}\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,aAAa,EAAEC,YAAY,GAAIC,GAAG,IAAK;EAC/E,MAAMA,GAAG;AACb,CAAC,EAAE;EACC,IAAI;IACA,MAAMC,MAAM,GAAGC,UAAU,CAACL,SAAS,CAAC,GAAGA,SAAS,CAAC,CAAC,GAAGA,SAAS;IAC9D,OAAOF,SAAS,CAACM,MAAM,CAAC,GAClBA,MAAM,CAACE,IAAI,CAAEF,MAAM,IAAKH,aAAa,CAACG,MAAM,CAAC,CAAC,GAC9CH,aAAa,CAACG,MAAM,CAAC;EAC/B,CAAC,CACD,OAAOD,GAAG,EAAE;IACR,OAAOD,YAAY,CAACC,GAAG,CAAC;EAC5B;AACJ;AACA,SAASE,UAAUA,CAACE,GAAG,EAAE;EACrB,OAAO,OAAOA,GAAG,KAAK,UAAU;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}