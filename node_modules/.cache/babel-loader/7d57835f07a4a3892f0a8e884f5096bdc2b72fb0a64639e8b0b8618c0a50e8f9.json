{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_isGlobalContext, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_usageConfig, _YargsInstance_versionOpt, _YargsInstance_validation;\nimport { command as Command } from './command.js';\nimport { assertNotStrictEqual, assertSingleKey, objectKeys } from './typings/common-types.js';\nimport { YError } from './yerror.js';\nimport { usage as Usage } from './usage.js';\nimport { argsert } from './argsert.js';\nimport { completion as Completion } from './completion.js';\nimport { validation as Validation } from './validation.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { applyExtends } from './utils/apply-extends.js';\nimport { applyMiddleware, GlobalMiddleware } from './middleware.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function YargsFactory(_shim) {\n  return (processArgs = [], cwd = _shim.process.cwd(), parentRequire) => {\n    const yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);\n    Object.defineProperty(yargs, 'argv', {\n      get: () => {\n        return yargs.parse();\n      },\n      enumerable: true\n    });\n    yargs.help();\n    yargs.version();\n    return yargs;\n  };\n}\nconst kCopyDoubleDash = Symbol('copyDoubleDash');\nconst kCreateLogger = Symbol('copyDoubleDash');\nconst kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');\nconst kEmitWarning = Symbol('emitWarning');\nconst kFreeze = Symbol('freeze');\nconst kGetDollarZero = Symbol('getDollarZero');\nconst kGetParserConfiguration = Symbol('getParserConfiguration');\nconst kGetUsageConfiguration = Symbol('getUsageConfiguration');\nconst kGuessLocale = Symbol('guessLocale');\nconst kGuessVersion = Symbol('guessVersion');\nconst kParsePositionalNumbers = Symbol('parsePositionalNumbers');\nconst kPkgUp = Symbol('pkgUp');\nconst kPopulateParserHintArray = Symbol('populateParserHintArray');\nconst kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');\nconst kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');\nconst kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');\nconst kSanitizeKey = Symbol('sanitizeKey');\nconst kSetKey = Symbol('setKey');\nconst kUnfreeze = Symbol('unfreeze');\nconst kValidateAsync = Symbol('validateAsync');\nconst kGetCommandInstance = Symbol('getCommandInstance');\nconst kGetContext = Symbol('getContext');\nconst kGetHasOutput = Symbol('getHasOutput');\nconst kGetLoggerInstance = Symbol('getLoggerInstance');\nconst kGetParseContext = Symbol('getParseContext');\nconst kGetUsageInstance = Symbol('getUsageInstance');\nconst kGetValidationInstance = Symbol('getValidationInstance');\nconst kHasParseCallback = Symbol('hasParseCallback');\nconst kIsGlobalContext = Symbol('isGlobalContext');\nconst kPostProcess = Symbol('postProcess');\nconst kRebase = Symbol('rebase');\nconst kReset = Symbol('reset');\nconst kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');\nconst kRunValidation = Symbol('runValidation');\nconst kSetHasOutput = Symbol('setHasOutput');\nconst kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');\nexport class YargsInstance {\n  constructor(processArgs = [], cwd, parentRequire, shim) {\n    this.customScriptName = false;\n    this.parsed = false;\n    _YargsInstance_command.set(this, void 0);\n    _YargsInstance_cwd.set(this, void 0);\n    _YargsInstance_context.set(this, {\n      commands: [],\n      fullCommands: []\n    });\n    _YargsInstance_completion.set(this, null);\n    _YargsInstance_completionCommand.set(this, null);\n    _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');\n    _YargsInstance_exitError.set(this, null);\n    _YargsInstance_detectLocale.set(this, true);\n    _YargsInstance_emittedWarnings.set(this, {});\n    _YargsInstance_exitProcess.set(this, true);\n    _YargsInstance_frozens.set(this, []);\n    _YargsInstance_globalMiddleware.set(this, void 0);\n    _YargsInstance_groups.set(this, {});\n    _YargsInstance_hasOutput.set(this, false);\n    _YargsInstance_helpOpt.set(this, null);\n    _YargsInstance_isGlobalContext.set(this, true);\n    _YargsInstance_logger.set(this, void 0);\n    _YargsInstance_output.set(this, '');\n    _YargsInstance_options.set(this, void 0);\n    _YargsInstance_parentRequire.set(this, void 0);\n    _YargsInstance_parserConfig.set(this, {});\n    _YargsInstance_parseFn.set(this, null);\n    _YargsInstance_parseContext.set(this, null);\n    _YargsInstance_pkgs.set(this, {});\n    _YargsInstance_preservedGroups.set(this, {});\n    _YargsInstance_processArgs.set(this, void 0);\n    _YargsInstance_recommendCommands.set(this, false);\n    _YargsInstance_shim.set(this, void 0);\n    _YargsInstance_strict.set(this, false);\n    _YargsInstance_strictCommands.set(this, false);\n    _YargsInstance_strictOptions.set(this, false);\n    _YargsInstance_usage.set(this, void 0);\n    _YargsInstance_usageConfig.set(this, {});\n    _YargsInstance_versionOpt.set(this, null);\n    _YargsInstance_validation.set(this, void 0);\n    __classPrivateFieldSet(this, _YargsInstance_shim, shim, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new GlobalMiddleware(this), \"f\");\n    this.$0 = this[kGetDollarZero]();\n    this[kReset]();\n    __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), \"f\");\n  }\n  addHelpOpt(opt, msg) {\n    const defaultHelpOpt = 'help';\n    argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n    if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n      this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n      __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, \"f\");\n    }\n    if (opt === false && msg === undefined) return this;\n    __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, \"f\");\n    this.boolean(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n    this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show help'));\n    return this;\n  }\n  help(opt, msg) {\n    return this.addHelpOpt(opt, msg);\n  }\n  addShowHiddenOpt(opt, msg) {\n    argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n    if (opt === false && msg === undefined) return this;\n    const showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n    this.boolean(showHiddenOpt);\n    this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show hidden options'));\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = showHiddenOpt;\n    return this;\n  }\n  showHidden(opt, msg) {\n    return this.addShowHiddenOpt(opt, msg);\n  }\n  alias(key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n    this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);\n    return this;\n  }\n  array(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('array', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n  boolean(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('boolean', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n  check(f, global) {\n    argsert('<function> [boolean]', [f, global], arguments.length);\n    this.middleware((argv, _yargs) => {\n      return maybeAsyncResult(() => {\n        return f(argv, _yargs.getOptions());\n      }, result => {\n        if (!result) {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__('Argument check failed: %s', f.toString()));\n        } else if (typeof result === 'string' || result instanceof Error) {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(result.toString(), result);\n        }\n        return argv;\n      }, err => {\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message ? err.message : err.toString(), err);\n        return argv;\n      });\n    }, false, global);\n    return this;\n  }\n  choices(key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n    this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);\n    return this;\n  }\n  coerce(keys, value) {\n    argsert('<object|string|array> [function]', [keys, value], arguments.length);\n    if (Array.isArray(keys)) {\n      if (!value) {\n        throw new YError('coerce callback must be provided');\n      }\n      for (const key of keys) {\n        this.coerce(key, value);\n      }\n      return this;\n    } else if (typeof keys === 'object') {\n      for (const key of Object.keys(keys)) {\n        this.coerce(key, keys[key]);\n      }\n      return this;\n    }\n    if (!value) {\n      throw new YError('coerce callback must be provided');\n    }\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addCoerceMiddleware((argv, yargs) => {\n      let aliases;\n      const shouldCoerce = Object.prototype.hasOwnProperty.call(argv, keys);\n      if (!shouldCoerce) {\n        return argv;\n      }\n      return maybeAsyncResult(() => {\n        aliases = yargs.getAliases();\n        return value(argv[keys]);\n      }, result => {\n        argv[keys] = result;\n        const stripAliased = yargs.getInternalMethods().getParserConfiguration()['strip-aliased'];\n        if (aliases[keys] && stripAliased !== true) {\n          for (const alias of aliases[keys]) {\n            argv[alias] = result;\n          }\n        }\n        return argv;\n      }, err => {\n        throw new YError(err.message);\n      });\n    }, keys);\n    return this;\n  }\n  conflicts(key1, key2) {\n    argsert('<string|object> [string|array]', [key1, key2], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicts(key1, key2);\n    return this;\n  }\n  config(key = 'config', msg, parseFn) {\n    argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);\n    if (typeof key === 'object' && !Array.isArray(key)) {\n      key = applyExtends(key, __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(key);\n      return this;\n    }\n    if (typeof msg === 'function') {\n      parseFn = msg;\n      msg = undefined;\n    }\n    this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Path to JSON config file'));\n    (Array.isArray(key) ? key : [key]).forEach(k => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").config[k] = parseFn || true;\n    });\n    return this;\n  }\n  completion(cmd, desc, fn) {\n    argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);\n    if (typeof desc === 'function') {\n      fn = desc;\n      desc = undefined;\n    }\n    __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion', \"f\");\n    if (!desc && desc !== false) {\n      desc = 'generate completion script';\n    }\n    this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"), desc);\n    if (fn) __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").registerFunction(fn);\n    return this;\n  }\n  command(cmd, description, builder, handler, middlewares, deprecated) {\n    argsert('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addHandler(cmd, description, builder, handler, middlewares, deprecated);\n    return this;\n  }\n  commands(cmd, description, builder, handler, middlewares, deprecated) {\n    return this.command(cmd, description, builder, handler, middlewares, deprecated);\n  }\n  commandDir(dir, opts) {\n    argsert('<string> [object]', [dir, opts], arguments.length);\n    const req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, \"f\") || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").require;\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getCallerFile(), opts);\n    return this;\n  }\n  count(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('count', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n  default(key, value, defaultDescription) {\n    argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);\n    if (defaultDescription) {\n      assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = defaultDescription;\n    }\n    if (typeof value === 'function') {\n      assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key]) __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").functionDescription(value);\n      value = value.call();\n    }\n    this[kPopulateParserHintSingleValueDictionary](this.default.bind(this), 'default', key, value);\n    return this;\n  }\n  defaults(key, value, defaultDescription) {\n    return this.default(key, value, defaultDescription);\n  }\n  demandCommand(min = 1, max, minMsg, maxMsg) {\n    argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);\n    if (typeof max !== 'number') {\n      minMsg = max;\n      max = Infinity;\n    }\n    this.global('_', false);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands._ = {\n      min,\n      max,\n      minMsg,\n      maxMsg\n    };\n    return this;\n  }\n  demand(keys, max, msg) {\n    if (Array.isArray(max)) {\n      max.forEach(key => {\n        assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        this.demandOption(key, msg);\n      });\n      max = Infinity;\n    } else if (typeof max !== 'number') {\n      msg = max;\n      max = Infinity;\n    }\n    if (typeof keys === 'number') {\n      assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      this.demandCommand(keys, max, msg, msg);\n    } else if (Array.isArray(keys)) {\n      keys.forEach(key => {\n        assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        this.demandOption(key, msg);\n      });\n    } else {\n      if (typeof msg === 'string') {\n        this.demandOption(keys, msg);\n      } else if (msg === true || typeof msg === 'undefined') {\n        this.demandOption(keys);\n      }\n    }\n    return this;\n  }\n  demandOption(keys, msg) {\n    argsert('<object|string|array> [string]', [keys, msg], arguments.length);\n    this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);\n    return this;\n  }\n  deprecateOption(option, message) {\n    argsert('<string> [string|boolean]', [option, message], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions[option] = message;\n    return this;\n  }\n  describe(keys, description) {\n    argsert('<object|string|array> [string]', [keys, description], arguments.length);\n    this[kSetKey](keys, true);\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").describe(keys, description);\n    return this;\n  }\n  detectLocale(detect) {\n    argsert('<boolean>', [detect], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, \"f\");\n    return this;\n  }\n  env(prefix) {\n    argsert('[string|boolean]', [prefix], arguments.length);\n    if (prefix === false) delete __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;else __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix = prefix || '';\n    return this;\n  }\n  epilogue(msg) {\n    argsert('<string>', [msg], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").epilog(msg);\n    return this;\n  }\n  epilog(msg) {\n    return this.epilogue(msg);\n  }\n  example(cmd, description) {\n    argsert('<string|array> [string]', [cmd, description], arguments.length);\n    if (Array.isArray(cmd)) {\n      cmd.forEach(exampleParams => this.example(...exampleParams));\n    } else {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").example(cmd, description);\n    }\n    return this;\n  }\n  exit(code, err) {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_exitError, err, \"f\");\n    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.exit(code);\n  }\n  exitProcess(enabled = true) {\n    argsert('[boolean]', [enabled], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, \"f\");\n    return this;\n  }\n  fail(f) {\n    argsert('<function|boolean>', [f], arguments.length);\n    if (typeof f === 'boolean' && f !== false) {\n      throw new YError(\"Invalid first argument. Expected function or boolean 'false'\");\n    }\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").failFn(f);\n    return this;\n  }\n  getAliases() {\n    return this.parsed ? this.parsed.aliases : {};\n  }\n  async getCompletion(args, done) {\n    argsert('<array> [function]', [args, done], arguments.length);\n    if (!done) {\n      return new Promise((resolve, reject) => {\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, (err, completions) => {\n          if (err) reject(err);else resolve(completions);\n        });\n      });\n    } else {\n      return __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, done);\n    }\n  }\n  getDemandedOptions() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedOptions;\n  }\n  getDemandedCommands() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands;\n  }\n  getDeprecatedOptions() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions;\n  }\n  getDetectLocale() {\n    return __classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\");\n  }\n  getExitProcess() {\n    return __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\");\n  }\n  getGroups() {\n    return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"));\n  }\n  getHelp() {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n      if (!this.parsed) {\n        const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n        if (isPromise(parse)) {\n          return parse.then(() => {\n            return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n          });\n        }\n      }\n      const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n      if (isPromise(builderResponse)) {\n        return builderResponse.then(() => {\n          return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n        });\n      }\n    }\n    return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help());\n  }\n  getOptions() {\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\");\n  }\n  getStrict() {\n    return __classPrivateFieldGet(this, _YargsInstance_strict, \"f\");\n  }\n  getStrictCommands() {\n    return __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\");\n  }\n  getStrictOptions() {\n    return __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\");\n  }\n  global(globals, global) {\n    argsert('<string|array> [boolean]', [globals, global], arguments.length);\n    globals = [].concat(globals);\n    if (global !== false) {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.filter(l => globals.indexOf(l) === -1);\n    } else {\n      globals.forEach(g => {\n        if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.includes(g)) __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.push(g);\n      });\n    }\n    return this;\n  }\n  group(opts, groupName) {\n    argsert('<string|array> <string>', [opts, groupName], arguments.length);\n    const existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName];\n    if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName]) {\n      delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName];\n    }\n    const seen = {};\n    __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName] = (existing || []).concat(opts).filter(key => {\n      if (seen[key]) return false;\n      return seen[key] = true;\n    });\n    return this;\n  }\n  hide(key) {\n    argsert('<string>', [key], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").hiddenOptions.push(key);\n    return this;\n  }\n  implies(key, value) {\n    argsert('<string|object> [number|string|array]', [key, value], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implies(key, value);\n    return this;\n  }\n  locale(locale) {\n    argsert('[string]', [locale], arguments.length);\n    if (locale === undefined) {\n      this[kGuessLocale]();\n      return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.getLocale();\n    }\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.setLocale(locale);\n    return this;\n  }\n  middleware(callback, applyBeforeValidation, global) {\n    return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addMiddleware(callback, !!applyBeforeValidation, global);\n  }\n  nargs(key, value) {\n    argsert('<string|object|array> [number]', [key, value], arguments.length);\n    this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);\n    return this;\n  }\n  normalize(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('normalize', keys);\n    return this;\n  }\n  number(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('number', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n  option(key, opt) {\n    argsert('<string|object> [object]', [key, opt], arguments.length);\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(k => {\n        this.options(k, key[k]);\n      });\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {};\n      }\n      this[kTrackManuallySetKeys](key);\n      if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {\n        this[kEmitWarning](['\"version\" is a reserved word.', 'Please do one of the following:', '- Disable version with `yargs.version(false)` if using \"version\" as an option', '- Use the built-in `yargs.version` method instead (if applicable)', '- Use a different option key', 'https://yargs.js.org/docs/#api-reference-version'].join('\\n'), undefined, 'versionWarning');\n      }\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[key] = true;\n      if (opt.alias) this.alias(key, opt.alias);\n      const deprecate = opt.deprecate || opt.deprecated;\n      if (deprecate) {\n        this.deprecateOption(key, deprecate);\n      }\n      const demand = opt.demand || opt.required || opt.require;\n      if (demand) {\n        this.demand(key, demand);\n      }\n      if (opt.demandOption) {\n        this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);\n      }\n      if (opt.conflicts) {\n        this.conflicts(key, opt.conflicts);\n      }\n      if ('default' in opt) {\n        this.default(key, opt.default);\n      }\n      if (opt.implies !== undefined) {\n        this.implies(key, opt.implies);\n      }\n      if (opt.nargs !== undefined) {\n        this.nargs(key, opt.nargs);\n      }\n      if (opt.config) {\n        this.config(key, opt.configParser);\n      }\n      if (opt.normalize) {\n        this.normalize(key);\n      }\n      if (opt.choices) {\n        this.choices(key, opt.choices);\n      }\n      if (opt.coerce) {\n        this.coerce(key, opt.coerce);\n      }\n      if (opt.group) {\n        this.group(key, opt.group);\n      }\n      if (opt.boolean || opt.type === 'boolean') {\n        this.boolean(key);\n        if (opt.alias) this.boolean(opt.alias);\n      }\n      if (opt.array || opt.type === 'array') {\n        this.array(key);\n        if (opt.alias) this.array(opt.alias);\n      }\n      if (opt.number || opt.type === 'number') {\n        this.number(key);\n        if (opt.alias) this.number(opt.alias);\n      }\n      if (opt.string || opt.type === 'string') {\n        this.string(key);\n        if (opt.alias) this.string(opt.alias);\n      }\n      if (opt.count || opt.type === 'count') {\n        this.count(key);\n      }\n      if (typeof opt.global === 'boolean') {\n        this.global(key, opt.global);\n      }\n      if (opt.defaultDescription) {\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = opt.defaultDescription;\n      }\n      if (opt.skipValidation) {\n        this.skipValidation(key);\n      }\n      const desc = opt.describe || opt.description || opt.desc;\n      const descriptions = __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions();\n      if (!Object.prototype.hasOwnProperty.call(descriptions, key) || typeof desc === 'string') {\n        this.describe(key, desc);\n      }\n      if (opt.hidden) {\n        this.hide(key);\n      }\n      if (opt.requiresArg) {\n        this.requiresArg(key);\n      }\n    }\n    return this;\n  }\n  options(key, opt) {\n    return this.option(key, opt);\n  }\n  parse(args, shortCircuit, _parseFn) {\n    argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);\n    this[kFreeze]();\n    if (typeof args === 'undefined') {\n      args = __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n    }\n    if (typeof shortCircuit === 'object') {\n      __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, \"f\");\n      shortCircuit = _parseFn;\n    }\n    if (typeof shortCircuit === 'function') {\n      __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, \"f\");\n      shortCircuit = false;\n    }\n    if (!shortCircuit) __classPrivateFieldSet(this, _YargsInstance_processArgs, args, \"f\");\n    if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, \"f\");\n    const parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);\n    const tmpParsed = this.parsed;\n    __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").setParsed(this.parsed);\n    if (isPromise(parsed)) {\n      return parsed.then(argv => {\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n        return argv;\n      }).catch(err => {\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) {\n          __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")(err, this.parsed.argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n        }\n        throw err;\n      }).finally(() => {\n        this[kUnfreeze]();\n        this.parsed = tmpParsed;\n      });\n    } else {\n      if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n      this[kUnfreeze]();\n      this.parsed = tmpParsed;\n    }\n    return parsed;\n  }\n  parseAsync(args, shortCircuit, _parseFn) {\n    const maybePromise = this.parse(args, shortCircuit, _parseFn);\n    return !isPromise(maybePromise) ? Promise.resolve(maybePromise) : maybePromise;\n  }\n  parseSync(args, shortCircuit, _parseFn) {\n    const maybePromise = this.parse(args, shortCircuit, _parseFn);\n    if (isPromise(maybePromise)) {\n      throw new YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');\n    }\n    return maybePromise;\n  }\n  parserConfiguration(config) {\n    argsert('<object>', [config], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, \"f\");\n    return this;\n  }\n  pkgConf(key, rootPath) {\n    argsert('<string> [string]', [key, rootPath], arguments.length);\n    let conf = null;\n    const obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"));\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = applyExtends(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(conf);\n    }\n    return this;\n  }\n  positional(key, opts) {\n    argsert('<string> <object>', [key, opts], arguments.length);\n    const supportedOpts = ['default', 'defaultDescription', 'implies', 'normalize', 'choices', 'conflicts', 'coerce', 'type', 'describe', 'desc', 'description', 'alias'];\n    opts = objFilter(opts, (k, v) => {\n      if (k === 'type' && !['string', 'number', 'boolean'].includes(v)) return false;\n      return supportedOpts.includes(k);\n    });\n    const fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands.length - 1];\n    const parseOptions = fullCommand ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").cmdToParseOptions(fullCommand) : {\n      array: [],\n      alias: {},\n      default: {},\n      demand: {}\n    };\n    objectKeys(parseOptions).forEach(pk => {\n      const parseOption = parseOptions[pk];\n      if (Array.isArray(parseOption)) {\n        if (parseOption.indexOf(key) !== -1) opts[pk] = true;\n      } else {\n        if (parseOption[key] && !(pk in opts)) opts[pk] = parseOption[key];\n      }\n    });\n    this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getPositionalGroupName());\n    return this.option(key, opts);\n  }\n  recommendCommands(recommend = true) {\n    argsert('[boolean]', [recommend], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, \"f\");\n    return this;\n  }\n  required(keys, max, msg) {\n    return this.demand(keys, max, msg);\n  }\n  require(keys, max, msg) {\n    return this.demand(keys, max, msg);\n  }\n  requiresArg(keys) {\n    argsert('<array|string|object> [number]', [keys], arguments.length);\n    if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").narg[keys]) {\n      return this;\n    } else {\n      this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);\n    }\n    return this;\n  }\n  showCompletionScript($0, cmd) {\n    argsert('[string] [string]', [$0, cmd], arguments.length);\n    $0 = $0 || this.$0;\n    __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion'));\n    return this;\n  }\n  showHelp(level) {\n    argsert('[string|function]', [level], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n      if (!this.parsed) {\n        const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n        if (isPromise(parse)) {\n          parse.then(() => {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n          });\n          return this;\n        }\n      }\n      const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n      if (isPromise(builderResponse)) {\n        builderResponse.then(() => {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n        });\n        return this;\n      }\n    }\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n    return this;\n  }\n  scriptName(scriptName) {\n    this.customScriptName = true;\n    this.$0 = scriptName;\n    return this;\n  }\n  showHelpOnFail(enabled, message) {\n    argsert('[boolean|string] [string]', [enabled, message], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelpOnFail(enabled, message);\n    return this;\n  }\n  showVersion(level) {\n    argsert('[string|function]', [level], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion(level);\n    return this;\n  }\n  skipValidation(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('skipValidation', keys);\n    return this;\n  }\n  strict(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, \"f\");\n    return this;\n  }\n  strictCommands(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, \"f\");\n    return this;\n  }\n  strictOptions(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, \"f\");\n    return this;\n  }\n  string(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('string', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n  terminalWidth() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.stdColumns;\n  }\n  updateLocale(obj) {\n    return this.updateStrings(obj);\n  }\n  updateStrings(obj) {\n    argsert('<object>', [obj], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.updateLocale(obj);\n    return this;\n  }\n  usage(msg, description, builder, handler) {\n    argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);\n    if (description !== undefined) {\n      assertNotStrictEqual(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      if ((msg || '').match(/^\\$0( |$)/)) {\n        return this.command(msg, description, builder, handler);\n      } else {\n        throw new YError('.usage() description must start with $0 if being used as alias for .command()');\n      }\n    } else {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").usage(msg);\n      return this;\n    }\n  }\n  usageConfiguration(config) {\n    argsert('<object>', [config], arguments.length);\n    __classPrivateFieldSet(this, _YargsInstance_usageConfig, config, \"f\");\n    return this;\n  }\n  version(opt, msg, ver) {\n    const defaultVersionOpt = 'version';\n    argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);\n    if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\")) {\n      this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(undefined);\n      __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, \"f\");\n    }\n    if (arguments.length === 0) {\n      ver = this[kGuessVersion]();\n      opt = defaultVersionOpt;\n    } else if (arguments.length === 1) {\n      if (opt === false) {\n        return this;\n      }\n      ver = opt;\n      opt = defaultVersionOpt;\n    } else if (arguments.length === 2) {\n      ver = msg;\n      msg = undefined;\n    }\n    __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, \"f\");\n    msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show version number');\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(ver || undefined);\n    this.boolean(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n    this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"), msg);\n    return this;\n  }\n  wrap(cols) {\n    argsert('<number|null|undefined>', [cols], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").wrap(cols);\n    return this;\n  }\n  [(_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_isGlobalContext = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_usageConfig = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash)](argv) {\n    if (!argv._ || !argv['--']) return argv;\n    argv._.push.apply(argv._, argv['--']);\n    try {\n      delete argv['--'];\n    } catch (_err) {}\n    return argv;\n  }\n  [kCreateLogger]() {\n    return {\n      log: (...args) => {\n        if (!this[kHasParseCallback]()) console.log(...args);\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length) __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n      },\n      error: (...args) => {\n        if (!this[kHasParseCallback]()) console.error(...args);\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length) __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n      }\n    };\n  }\n  [kDeleteFromParserHintObject](optionKey) {\n    objectKeys(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")).forEach(hintKey => {\n      if ((key => key === 'configObjects')(hintKey)) return;\n      const hint = __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[hintKey];\n      if (Array.isArray(hint)) {\n        if (hint.includes(optionKey)) hint.splice(hint.indexOf(optionKey), 1);\n      } else if (typeof hint === 'object') {\n        delete hint[optionKey];\n      }\n    });\n    delete __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions()[optionKey];\n  }\n  [kEmitWarning](warning, type, deduplicationId) {\n    if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId]) {\n      __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.emitWarning(warning, type);\n      __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId] = true;\n    }\n  }\n  [kFreeze]() {\n    __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").push({\n      options: __classPrivateFieldGet(this, _YargsInstance_options, \"f\"),\n      configObjects: __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects.slice(0),\n      exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"),\n      groups: __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"),\n      strict: __classPrivateFieldGet(this, _YargsInstance_strict, \"f\"),\n      strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\"),\n      strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\"),\n      completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"),\n      output: __classPrivateFieldGet(this, _YargsInstance_output, \"f\"),\n      exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"),\n      hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\"),\n      parsed: this.parsed,\n      parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"),\n      parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\")\n    });\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").freeze();\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").freeze();\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").freeze();\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").freeze();\n  }\n  [kGetDollarZero]() {\n    let $0 = '';\n    let default$0;\n    if (/\\b(node|iojs|electron)(\\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv()[0])) {\n      default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(1, 2);\n    } else {\n      default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(0, 1);\n    }\n    $0 = default$0.map(x => {\n      const b = this[kRebase](__classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), x);\n      return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n    }).join(' ').trim();\n    if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_') && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_')) {\n      $0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_').replace(`${__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.execPath())}/`, '');\n    }\n    return $0;\n  }\n  [kGetParserConfiguration]() {\n    return __classPrivateFieldGet(this, _YargsInstance_parserConfig, \"f\");\n  }\n  [kGetUsageConfiguration]() {\n    return __classPrivateFieldGet(this, _YargsInstance_usageConfig, \"f\");\n  }\n  [kGuessLocale]() {\n    if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\")) return;\n    const locale = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_ALL') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_MESSAGES') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANG') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANGUAGE') || 'en_US';\n    this.locale(locale.replace(/[.:].*/, ''));\n  }\n  [kGuessVersion]() {\n    const obj = this[kPkgUp]();\n    return obj.version || 'unknown';\n  }\n  [kParsePositionalNumbers](argv) {\n    const args = argv['--'] ? argv['--'] : argv._;\n    for (let i = 0, arg; (arg = args[i]) !== undefined; i++) {\n      if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.looksLikeNumber(arg) && Number.isSafeInteger(Math.floor(parseFloat(`${arg}`)))) {\n        args[i] = Number(arg);\n      }\n    }\n    return argv;\n  }\n  [kPkgUp](rootPath) {\n    const npath = rootPath || '*';\n    if (__classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath]) return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n    let obj = {};\n    try {\n      let startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").mainFilename;\n      if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.extname(startDir)) {\n        startDir = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(startDir);\n      }\n      const pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").findUp(startDir, (dir, names) => {\n        if (names.includes('package.json')) {\n          return 'package.json';\n        } else {\n          return undefined;\n        }\n      });\n      assertNotStrictEqual(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").readFileSync(pkgJsonPath, 'utf8'));\n    } catch (_noop) {}\n    __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath] = obj || {};\n    return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n  }\n  [kPopulateParserHintArray](type, keys) {\n    keys = [].concat(keys);\n    keys.forEach(key => {\n      key = this[kSanitizeKey](key);\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type].push(key);\n    });\n  }\n  [kPopulateParserHintSingleValueDictionary](builder, type, key, value) {\n    this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = value;\n    });\n  }\n  [kPopulateParserHintArrayDictionary](builder, type, key, value) {\n    this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] || []).concat(value);\n    });\n  }\n  [kPopulateParserHintDictionary](builder, type, key, value, singleKeyHandler) {\n    if (Array.isArray(key)) {\n      key.forEach(k => {\n        builder(k, value);\n      });\n    } else if ((key => typeof key === 'object')(key)) {\n      for (const k of objectKeys(key)) {\n        builder(k, key[k]);\n      }\n    } else {\n      singleKeyHandler(type, this[kSanitizeKey](key), value);\n    }\n  }\n  [kSanitizeKey](key) {\n    if (key === '__proto__') return '___proto___';\n    return key;\n  }\n  [kSetKey](key, set) {\n    this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);\n    return this;\n  }\n  [kUnfreeze]() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").pop();\n    assertNotStrictEqual(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n    let configObjects;\n    _a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, ({\n      options: {\n        set value(_o) {\n          __classPrivateFieldSet(_a, _YargsInstance_options, _o, \"f\");\n        }\n      }.value,\n      configObjects,\n      exitProcess: {\n        set value(_o) {\n          __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, \"f\");\n        }\n      }.value,\n      groups: {\n        set value(_o) {\n          __classPrivateFieldSet(_c, _YargsInstance_groups, _o, \"f\");\n        }\n      }.value,\n      output: {\n        set value(_o) {\n          __classPrivateFieldSet(_d, _YargsInstance_output, _o, \"f\");\n        }\n      }.value,\n      exitError: {\n        set value(_o) {\n          __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, \"f\");\n        }\n      }.value,\n      hasOutput: {\n        set value(_o) {\n          __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, \"f\");\n        }\n      }.value,\n      parsed: this.parsed,\n      strict: {\n        set value(_o) {\n          __classPrivateFieldSet(_g, _YargsInstance_strict, _o, \"f\");\n        }\n      }.value,\n      strictCommands: {\n        set value(_o) {\n          __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, \"f\");\n        }\n      }.value,\n      strictOptions: {\n        set value(_o) {\n          __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, \"f\");\n        }\n      }.value,\n      completionCommand: {\n        set value(_o) {\n          __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, \"f\");\n        }\n      }.value,\n      parseFn: {\n        set value(_o) {\n          __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, \"f\");\n        }\n      }.value,\n      parseContext: {\n        set value(_o) {\n          __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, \"f\");\n        }\n      }.value\n    } = frozen);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = configObjects;\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").unfreeze();\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unfreeze();\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").unfreeze();\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").unfreeze();\n  }\n  [kValidateAsync](validation, argv) {\n    return maybeAsyncResult(argv, result => {\n      validation(result);\n      return result;\n    });\n  }\n  getInternalMethods() {\n    return {\n      getCommandInstance: this[kGetCommandInstance].bind(this),\n      getContext: this[kGetContext].bind(this),\n      getHasOutput: this[kGetHasOutput].bind(this),\n      getLoggerInstance: this[kGetLoggerInstance].bind(this),\n      getParseContext: this[kGetParseContext].bind(this),\n      getParserConfiguration: this[kGetParserConfiguration].bind(this),\n      getUsageConfiguration: this[kGetUsageConfiguration].bind(this),\n      getUsageInstance: this[kGetUsageInstance].bind(this),\n      getValidationInstance: this[kGetValidationInstance].bind(this),\n      hasParseCallback: this[kHasParseCallback].bind(this),\n      isGlobalContext: this[kIsGlobalContext].bind(this),\n      postProcess: this[kPostProcess].bind(this),\n      reset: this[kReset].bind(this),\n      runValidation: this[kRunValidation].bind(this),\n      runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),\n      setHasOutput: this[kSetHasOutput].bind(this)\n    };\n  }\n  [kGetCommandInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_command, \"f\");\n  }\n  [kGetContext]() {\n    return __classPrivateFieldGet(this, _YargsInstance_context, \"f\");\n  }\n  [kGetHasOutput]() {\n    return __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\");\n  }\n  [kGetLoggerInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_logger, \"f\");\n  }\n  [kGetParseContext]() {\n    return __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\") || {};\n  }\n  [kGetUsageInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\");\n  }\n  [kGetValidationInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_validation, \"f\");\n  }\n  [kHasParseCallback]() {\n    return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\");\n  }\n  [kIsGlobalContext]() {\n    return __classPrivateFieldGet(this, _YargsInstance_isGlobalContext, \"f\");\n  }\n  [kPostProcess](argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {\n    if (calledFromCommand) return argv;\n    if (isPromise(argv)) return argv;\n    if (!populateDoubleDash) {\n      argv = this[kCopyDoubleDash](argv);\n    }\n    const parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] || this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;\n    if (parsePositionalNumbers) {\n      argv = this[kParsePositionalNumbers](argv);\n    }\n    if (runGlobalMiddleware) {\n      argv = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n    }\n    return argv;\n  }\n  [kReset](aliases = {}) {\n    __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\") || {}, \"f\");\n    const tmpOptions = {};\n    tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local || [];\n    tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || [];\n    const localLookup = {};\n    tmpOptions.local.forEach(l => {\n      localLookup[l] = true;\n      (aliases[l] || []).forEach(a => {\n        localLookup[a] = true;\n      });\n    });\n    Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, \"f\")).reduce((acc, groupName) => {\n      const keys = __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName].filter(key => !(key in localLookup));\n      if (keys.length > 0) {\n        acc[groupName] = keys;\n      }\n      return acc;\n    }, {}));\n    __classPrivateFieldSet(this, _YargsInstance_groups, {}, \"f\");\n    const arrayOptions = ['array', 'boolean', 'string', 'skipValidation', 'count', 'normalize', 'number', 'hiddenOptions'];\n    const objectOptions = ['narg', 'key', 'alias', 'default', 'defaultDescription', 'config', 'choices', 'demandedOptions', 'demandedCommands', 'deprecatedOptions'];\n    arrayOptions.forEach(k => {\n      tmpOptions[k] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k] || []).filter(k => !localLookup[k]);\n    });\n    objectOptions.forEach(k => {\n      tmpOptions[k] = objFilter(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k], k => !localLookup[k]);\n    });\n    tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n    __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").reset(localLookup) : Usage(this, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").reset(localLookup) : Validation(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").reset() : Command(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n    if (!__classPrivateFieldGet(this, _YargsInstance_completion, \"f\")) __classPrivateFieldSet(this, _YargsInstance_completion, Completion(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").reset();\n    __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_output, '', \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_exitError, null, \"f\");\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, \"f\");\n    this.parsed = false;\n    return this;\n  }\n  [kRebase](base, dir) {\n    return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.relative(base, dir);\n  }\n  [kRunYargsParserAndExecuteCommands](args, shortCircuit, calledFromCommand, commandIndex = 0, helpOnly = false) {\n    let skipValidation = !!calledFromCommand || helpOnly;\n    args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").__ = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__;\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration = this[kGetParserConfiguration]();\n    const populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration['populate--'];\n    const config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration, {\n      'populate--': true\n    });\n    const parsed = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), {\n      configuration: {\n        'parse-positional-numbers': false,\n        ...config\n      }\n    }));\n    const argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"));\n    let argvPromise = undefined;\n    const aliases = parsed.aliases;\n    let helpOptSet = false;\n    let versionOptSet = false;\n    Object.keys(argv).forEach(key => {\n      if (key === __classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\") && argv[key]) {\n        helpOptSet = true;\n      } else if (key === __classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && argv[key]) {\n        versionOptSet = true;\n      }\n    });\n    argv.$0 = this.$0;\n    this.parsed = parsed;\n    if (commandIndex === 0) {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").clearCachedHelpMessage();\n    }\n    try {\n      this[kGuessLocale]();\n      if (shortCircuit) {\n        return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);\n      }\n      if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n        const helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")].concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")] || []).filter(k => k.length > 1);\n        if (helpCmds.includes('' + argv._[argv._.length - 1])) {\n          argv._.pop();\n          helpOptSet = true;\n        }\n      }\n      __classPrivateFieldSet(this, _YargsInstance_isGlobalContext, false, \"f\");\n      const handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").getCommands();\n      const requestCompletions = (__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey in argv);\n      const skipRecommendation = helpOptSet || requestCompletions || helpOnly;\n      if (argv._.length) {\n        if (handlerKeys.length) {\n          let firstUnknownCommand;\n          for (let i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {\n            cmd = String(argv._[i]);\n            if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n              const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);\n              return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n            } else if (!firstUnknownCommand && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n              firstUnknownCommand = cmd;\n              break;\n            }\n          }\n          if (!__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && __classPrivateFieldGet(this, _YargsInstance_recommendCommands, \"f\") && firstUnknownCommand && !skipRecommendation) {\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").recommendCommands(firstUnknownCommand, handlerKeys);\n          }\n        }\n        if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") && argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) && !requestCompletions) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          this.showCompletionScript();\n          this.exit(0);\n        }\n      }\n      if (__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && !skipRecommendation) {\n        const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);\n        return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n      }\n      if (requestCompletions) {\n        if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n        args = [].concat(args);\n        const completionArgs = args.slice(args.indexOf(`--${__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey}`) + 1);\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(completionArgs, (err, completions) => {\n          if (err) throw new YError(err.message);\n          (completions || []).forEach(completion => {\n            __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(completion);\n          });\n          this.exit(0);\n        });\n        return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);\n      }\n      if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\")) {\n        if (helpOptSet) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          skipValidation = true;\n          this.showHelp('log');\n          this.exit(0);\n        } else if (versionOptSet) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          skipValidation = true;\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion('log');\n          this.exit(0);\n        }\n      }\n      if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.length > 0) {\n        skipValidation = Object.keys(argv).some(key => __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.indexOf(key) >= 0 && argv[key] === true);\n      }\n      if (!skipValidation) {\n        if (parsed.error) throw new YError(parsed.error.message);\n        if (!requestCompletions) {\n          const validation = this[kRunValidation](aliases, {}, parsed.error);\n          if (!calledFromCommand) {\n            argvPromise = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), true);\n          }\n          argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);\n          if (isPromise(argvPromise) && !calledFromCommand) {\n            argvPromise = argvPromise.then(() => {\n              return applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n            });\n          }\n        }\n      }\n    } catch (err) {\n      if (err instanceof YError) __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message, err);else throw err;\n    }\n    return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);\n  }\n  [kRunValidation](aliases, positionalMap, parseErrors, isDefaultCommand) {\n    const demandedOptions = {\n      ...this.getDemandedOptions()\n    };\n    return argv => {\n      if (parseErrors) throw new YError(parseErrors.message);\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").nonOptionCount(argv);\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").requiredArguments(argv, demandedOptions);\n      let failedStrictCommands = false;\n      if (__classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\")) {\n        failedStrictCommands = __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownCommands(argv);\n      }\n      if (__classPrivateFieldGet(this, _YargsInstance_strict, \"f\") && !failedStrictCommands) {\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);\n      } else if (__classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\")) {\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, {}, false, false);\n      }\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").limitedChoices(argv);\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implications(argv);\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicting(argv);\n    };\n  }\n  [kSetHasOutput]() {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n  }\n  [kTrackManuallySetKeys](keys) {\n    if (typeof keys === 'string') {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n    } else {\n      for (const k of keys) {\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[k] = true;\n      }\n    }\n  }\n}\nexport function isYargsInstance(y) {\n  return !!y && typeof y.getInternalMethods === 'function';\n}","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_YargsInstance_command","_YargsInstance_cwd","_YargsInstance_context","_YargsInstance_completion","_YargsInstance_completionCommand","_YargsInstance_defaultShowHiddenOpt","_YargsInstance_exitError","_YargsInstance_detectLocale","_YargsInstance_emittedWarnings","_YargsInstance_exitProcess","_YargsInstance_frozens","_YargsInstance_globalMiddleware","_YargsInstance_groups","_YargsInstance_hasOutput","_YargsInstance_helpOpt","_YargsInstance_isGlobalContext","_YargsInstance_logger","_YargsInstance_output","_YargsInstance_options","_YargsInstance_parentRequire","_YargsInstance_parserConfig","_YargsInstance_parseFn","_YargsInstance_parseContext","_YargsInstance_pkgs","_YargsInstance_preservedGroups","_YargsInstance_processArgs","_YargsInstance_recommendCommands","_YargsInstance_shim","_YargsInstance_strict","_YargsInstance_strictCommands","_YargsInstance_strictOptions","_YargsInstance_usage","_YargsInstance_usageConfig","_YargsInstance_versionOpt","_YargsInstance_validation","command","Command","assertNotStrictEqual","assertSingleKey","objectKeys","YError","usage","Usage","argsert","completion","Completion","validation","Validation","objFilter","applyExtends","applyMiddleware","GlobalMiddleware","isPromise","maybeAsyncResult","setBlocking","YargsFactory","_shim","processArgs","cwd","process","parentRequire","yargs","YargsInstance","Object","defineProperty","parse","enumerable","help","version","kCopyDoubleDash","Symbol","kCreateLogger","kDeleteFromParserHintObject","kEmitWarning","kFreeze","kGetDollarZero","kGetParserConfiguration","kGetUsageConfiguration","kGuessLocale","kGuessVersion","kParsePositionalNumbers","kPkgUp","kPopulateParserHintArray","kPopulateParserHintSingleValueDictionary","kPopulateParserHintArrayDictionary","kPopulateParserHintDictionary","kSanitizeKey","kSetKey","kUnfreeze","kValidateAsync","kGetCommandInstance","kGetContext","kGetHasOutput","kGetLoggerInstance","kGetParseContext","kGetUsageInstance","kGetValidationInstance","kHasParseCallback","kIsGlobalContext","kPostProcess","kRebase","kReset","kRunYargsParserAndExecuteCommands","kRunValidation","kSetHasOutput","kTrackManuallySetKeys","constructor","shim","customScriptName","parsed","commands","fullCommands","$0","showHiddenOpt","addHelpOpt","opt","msg","defaultHelpOpt","arguments","length","undefined","boolean","describe","deferY18nLookup","addShowHiddenOpt","showHidden","alias","key","bind","array","keys","check","global","middleware","argv","_yargs","getOptions","result","fail","y18n","__","toString","Error","err","message","choices","coerce","Array","isArray","addCoerceMiddleware","aliases","shouldCoerce","prototype","hasOwnProperty","getAliases","stripAliased","getInternalMethods","getParserConfiguration","conflicts","key1","key2","config","parseFn","configObjects","concat","forEach","k","cmd","desc","fn","registerFunction","description","builder","handler","middlewares","deprecated","addHandler","commandDir","dir","opts","req","require","addDirectory","getCallerFile","count","default","defaultDescription","functionDescription","defaults","demandCommand","min","max","minMsg","maxMsg","Infinity","demandedCommands","_","demand","demandOption","deprecateOption","option","deprecatedOptions","detectLocale","detect","env","prefix","envPrefix","epilogue","epilog","example","exampleParams","exit","code","exitProcess","enabled","failFn","getCompletion","args","done","Promise","resolve","reject","completions","getDemandedOptions","demandedOptions","getDemandedCommands","getDeprecatedOptions","getDetectLocale","getExitProcess","getGroups","assign","getHelp","hasCachedHelpMessage","then","builderResponse","runDefaultBuilderOn","getStrict","getStrictCommands","getStrictOptions","globals","local","filter","l","indexOf","g","includes","push","group","groupName","existing","seen","hide","hiddenOptions","implies","locale","getLocale","setLocale","callback","applyBeforeValidation","addMiddleware","nargs","normalize","number","options","join","deprecate","required","configParser","type","string","skipValidation","descriptions","getDescriptions","hidden","requiresArg","shortCircuit","_parseFn","tmpParsed","setParsed","catch","finally","parseAsync","maybePromise","parseSync","parserConfiguration","pkgConf","rootPath","conf","obj","positional","supportedOpts","v","fullCommand","parseOptions","cmdToParseOptions","pk","parseOption","getPositionalGroupName","recommendCommands","recommend","narg","NaN","showCompletionScript","log","generateCompletionScript","showHelp","level","scriptName","showHelpOnFail","showVersion","strict","strictCommands","strictOptions","terminalWidth","stdColumns","updateLocale","updateStrings","match","usageConfiguration","ver","defaultVersionOpt","wrap","cols","WeakMap","apply","_err","console","error","optionKey","hintKey","hint","splice","warning","deduplicationId","emitWarning","slice","groups","completionCommand","output","exitError","hasOutput","parseContext","freeze","default$0","test","map","x","b","trim","getEnv","getProcessArgvBin","replace","path","dirname","execPath","i","arg","Parser","looksLikeNumber","Number","isSafeInteger","Math","floor","parseFloat","npath","startDir","mainFilename","extname","pkgJsonPath","findUp","names","JSON","readFileSync","_noop","singleKeyHandler","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","frozen","pop","_o","unfreeze","getCommandInstance","getContext","getHasOutput","getLoggerInstance","getParseContext","getUsageConfiguration","getUsageInstance","getValidationInstance","hasParseCallback","isGlobalContext","postProcess","reset","runValidation","runYargsParserAndExecuteCommands","setHasOutput","populateDoubleDash","calledFromCommand","runGlobalMiddleware","parsePositionalNumbers","getMiddleware","tmpOptions","localLookup","a","reduce","acc","arrayOptions","objectOptions","base","relative","commandIndex","helpOnly","configuration","detailed","argvPromise","helpOptSet","versionOptSet","clearCachedHelpMessage","helpCmds","handlerKeys","getCommands","requestCompletions","completionKey","skipRecommendation","firstUnknownCommand","String","innerArgv","runCommand","hasDefaultCommand","completionArgs","some","positionalMap","parseErrors","isDefaultCommand","nonOptionCount","requiredArguments","failedStrictCommands","unknownCommands","unknownArguments","limitedChoices","implications","conflicting","isYargsInstance","y"],"sources":["/Users/kseniavoronova/today-i-learned-react/node_modules/yargs/build/lib/yargs-factory.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_isGlobalContext, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_usageConfig, _YargsInstance_versionOpt, _YargsInstance_validation;\nimport { command as Command, } from './command.js';\nimport { assertNotStrictEqual, assertSingleKey, objectKeys, } from './typings/common-types.js';\nimport { YError } from './yerror.js';\nimport { usage as Usage } from './usage.js';\nimport { argsert } from './argsert.js';\nimport { completion as Completion, } from './completion.js';\nimport { validation as Validation, } from './validation.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { applyExtends } from './utils/apply-extends.js';\nimport { applyMiddleware, GlobalMiddleware, } from './middleware.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function YargsFactory(_shim) {\n    return (processArgs = [], cwd = _shim.process.cwd(), parentRequire) => {\n        const yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);\n        Object.defineProperty(yargs, 'argv', {\n            get: () => {\n                return yargs.parse();\n            },\n            enumerable: true,\n        });\n        yargs.help();\n        yargs.version();\n        return yargs;\n    };\n}\nconst kCopyDoubleDash = Symbol('copyDoubleDash');\nconst kCreateLogger = Symbol('copyDoubleDash');\nconst kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');\nconst kEmitWarning = Symbol('emitWarning');\nconst kFreeze = Symbol('freeze');\nconst kGetDollarZero = Symbol('getDollarZero');\nconst kGetParserConfiguration = Symbol('getParserConfiguration');\nconst kGetUsageConfiguration = Symbol('getUsageConfiguration');\nconst kGuessLocale = Symbol('guessLocale');\nconst kGuessVersion = Symbol('guessVersion');\nconst kParsePositionalNumbers = Symbol('parsePositionalNumbers');\nconst kPkgUp = Symbol('pkgUp');\nconst kPopulateParserHintArray = Symbol('populateParserHintArray');\nconst kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');\nconst kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');\nconst kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');\nconst kSanitizeKey = Symbol('sanitizeKey');\nconst kSetKey = Symbol('setKey');\nconst kUnfreeze = Symbol('unfreeze');\nconst kValidateAsync = Symbol('validateAsync');\nconst kGetCommandInstance = Symbol('getCommandInstance');\nconst kGetContext = Symbol('getContext');\nconst kGetHasOutput = Symbol('getHasOutput');\nconst kGetLoggerInstance = Symbol('getLoggerInstance');\nconst kGetParseContext = Symbol('getParseContext');\nconst kGetUsageInstance = Symbol('getUsageInstance');\nconst kGetValidationInstance = Symbol('getValidationInstance');\nconst kHasParseCallback = Symbol('hasParseCallback');\nconst kIsGlobalContext = Symbol('isGlobalContext');\nconst kPostProcess = Symbol('postProcess');\nconst kRebase = Symbol('rebase');\nconst kReset = Symbol('reset');\nconst kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');\nconst kRunValidation = Symbol('runValidation');\nconst kSetHasOutput = Symbol('setHasOutput');\nconst kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');\nexport class YargsInstance {\n    constructor(processArgs = [], cwd, parentRequire, shim) {\n        this.customScriptName = false;\n        this.parsed = false;\n        _YargsInstance_command.set(this, void 0);\n        _YargsInstance_cwd.set(this, void 0);\n        _YargsInstance_context.set(this, { commands: [], fullCommands: [] });\n        _YargsInstance_completion.set(this, null);\n        _YargsInstance_completionCommand.set(this, null);\n        _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');\n        _YargsInstance_exitError.set(this, null);\n        _YargsInstance_detectLocale.set(this, true);\n        _YargsInstance_emittedWarnings.set(this, {});\n        _YargsInstance_exitProcess.set(this, true);\n        _YargsInstance_frozens.set(this, []);\n        _YargsInstance_globalMiddleware.set(this, void 0);\n        _YargsInstance_groups.set(this, {});\n        _YargsInstance_hasOutput.set(this, false);\n        _YargsInstance_helpOpt.set(this, null);\n        _YargsInstance_isGlobalContext.set(this, true);\n        _YargsInstance_logger.set(this, void 0);\n        _YargsInstance_output.set(this, '');\n        _YargsInstance_options.set(this, void 0);\n        _YargsInstance_parentRequire.set(this, void 0);\n        _YargsInstance_parserConfig.set(this, {});\n        _YargsInstance_parseFn.set(this, null);\n        _YargsInstance_parseContext.set(this, null);\n        _YargsInstance_pkgs.set(this, {});\n        _YargsInstance_preservedGroups.set(this, {});\n        _YargsInstance_processArgs.set(this, void 0);\n        _YargsInstance_recommendCommands.set(this, false);\n        _YargsInstance_shim.set(this, void 0);\n        _YargsInstance_strict.set(this, false);\n        _YargsInstance_strictCommands.set(this, false);\n        _YargsInstance_strictOptions.set(this, false);\n        _YargsInstance_usage.set(this, void 0);\n        _YargsInstance_usageConfig.set(this, {});\n        _YargsInstance_versionOpt.set(this, null);\n        _YargsInstance_validation.set(this, void 0);\n        __classPrivateFieldSet(this, _YargsInstance_shim, shim, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new GlobalMiddleware(this), \"f\");\n        this.$0 = this[kGetDollarZero]();\n        this[kReset]();\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), \"f\");\n    }\n    addHelpOpt(opt, msg) {\n        const defaultHelpOpt = 'help';\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n            __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, \"f\");\n        }\n        if (opt === false && msg === undefined)\n            return this;\n        __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, \"f\");\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show help'));\n        return this;\n    }\n    help(opt, msg) {\n        return this.addHelpOpt(opt, msg);\n    }\n    addShowHiddenOpt(opt, msg) {\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (opt === false && msg === undefined)\n            return this;\n        const showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        this.boolean(showHiddenOpt);\n        this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show hidden options'));\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = showHiddenOpt;\n        return this;\n    }\n    showHidden(opt, msg) {\n        return this.addShowHiddenOpt(opt, msg);\n    }\n    alias(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);\n        return this;\n    }\n    array(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('array', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    boolean(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('boolean', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    check(f, global) {\n        argsert('<function> [boolean]', [f, global], arguments.length);\n        this.middleware((argv, _yargs) => {\n            return maybeAsyncResult(() => {\n                return f(argv, _yargs.getOptions());\n            }, (result) => {\n                if (!result) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__('Argument check failed: %s', f.toString()));\n                }\n                else if (typeof result === 'string' || result instanceof Error) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(result.toString(), result);\n                }\n                return argv;\n            }, (err) => {\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message ? err.message : err.toString(), err);\n                return argv;\n            });\n        }, false, global);\n        return this;\n    }\n    choices(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);\n        return this;\n    }\n    coerce(keys, value) {\n        argsert('<object|string|array> [function]', [keys, value], arguments.length);\n        if (Array.isArray(keys)) {\n            if (!value) {\n                throw new YError('coerce callback must be provided');\n            }\n            for (const key of keys) {\n                this.coerce(key, value);\n            }\n            return this;\n        }\n        else if (typeof keys === 'object') {\n            for (const key of Object.keys(keys)) {\n                this.coerce(key, keys[key]);\n            }\n            return this;\n        }\n        if (!value) {\n            throw new YError('coerce callback must be provided');\n        }\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addCoerceMiddleware((argv, yargs) => {\n            let aliases;\n            const shouldCoerce = Object.prototype.hasOwnProperty.call(argv, keys);\n            if (!shouldCoerce) {\n                return argv;\n            }\n            return maybeAsyncResult(() => {\n                aliases = yargs.getAliases();\n                return value(argv[keys]);\n            }, (result) => {\n                argv[keys] = result;\n                const stripAliased = yargs\n                    .getInternalMethods()\n                    .getParserConfiguration()['strip-aliased'];\n                if (aliases[keys] && stripAliased !== true) {\n                    for (const alias of aliases[keys]) {\n                        argv[alias] = result;\n                    }\n                }\n                return argv;\n            }, (err) => {\n                throw new YError(err.message);\n            });\n        }, keys);\n        return this;\n    }\n    conflicts(key1, key2) {\n        argsert('<string|object> [string|array]', [key1, key2], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicts(key1, key2);\n        return this;\n    }\n    config(key = 'config', msg, parseFn) {\n        argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);\n        if (typeof key === 'object' && !Array.isArray(key)) {\n            key = applyExtends(key, __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(key);\n            return this;\n        }\n        if (typeof msg === 'function') {\n            parseFn = msg;\n            msg = undefined;\n        }\n        this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Path to JSON config file'));\n        (Array.isArray(key) ? key : [key]).forEach(k => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").config[k] = parseFn || true;\n        });\n        return this;\n    }\n    completion(cmd, desc, fn) {\n        argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);\n        if (typeof desc === 'function') {\n            fn = desc;\n            desc = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion', \"f\");\n        if (!desc && desc !== false) {\n            desc = 'generate completion script';\n        }\n        this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"), desc);\n        if (fn)\n            __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").registerFunction(fn);\n        return this;\n    }\n    command(cmd, description, builder, handler, middlewares, deprecated) {\n        argsert('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addHandler(cmd, description, builder, handler, middlewares, deprecated);\n        return this;\n    }\n    commands(cmd, description, builder, handler, middlewares, deprecated) {\n        return this.command(cmd, description, builder, handler, middlewares, deprecated);\n    }\n    commandDir(dir, opts) {\n        argsert('<string> [object]', [dir, opts], arguments.length);\n        const req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, \"f\") || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").require;\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getCallerFile(), opts);\n        return this;\n    }\n    count(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('count', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    default(key, value, defaultDescription) {\n        argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);\n        if (defaultDescription) {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = defaultDescription;\n        }\n        if (typeof value === 'function') {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key])\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] =\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").functionDescription(value);\n            value = value.call();\n        }\n        this[kPopulateParserHintSingleValueDictionary](this.default.bind(this), 'default', key, value);\n        return this;\n    }\n    defaults(key, value, defaultDescription) {\n        return this.default(key, value, defaultDescription);\n    }\n    demandCommand(min = 1, max, minMsg, maxMsg) {\n        argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);\n        if (typeof max !== 'number') {\n            minMsg = max;\n            max = Infinity;\n        }\n        this.global('_', false);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands._ = {\n            min,\n            max,\n            minMsg,\n            maxMsg,\n        };\n        return this;\n    }\n    demand(keys, max, msg) {\n        if (Array.isArray(max)) {\n            max.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n            max = Infinity;\n        }\n        else if (typeof max !== 'number') {\n            msg = max;\n            max = Infinity;\n        }\n        if (typeof keys === 'number') {\n            assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            this.demandCommand(keys, max, msg, msg);\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n        }\n        else {\n            if (typeof msg === 'string') {\n                this.demandOption(keys, msg);\n            }\n            else if (msg === true || typeof msg === 'undefined') {\n                this.demandOption(keys);\n            }\n        }\n        return this;\n    }\n    demandOption(keys, msg) {\n        argsert('<object|string|array> [string]', [keys, msg], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);\n        return this;\n    }\n    deprecateOption(option, message) {\n        argsert('<string> [string|boolean]', [option, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions[option] = message;\n        return this;\n    }\n    describe(keys, description) {\n        argsert('<object|string|array> [string]', [keys, description], arguments.length);\n        this[kSetKey](keys, true);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").describe(keys, description);\n        return this;\n    }\n    detectLocale(detect) {\n        argsert('<boolean>', [detect], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, \"f\");\n        return this;\n    }\n    env(prefix) {\n        argsert('[string|boolean]', [prefix], arguments.length);\n        if (prefix === false)\n            delete __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        else\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix = prefix || '';\n        return this;\n    }\n    epilogue(msg) {\n        argsert('<string>', [msg], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").epilog(msg);\n        return this;\n    }\n    epilog(msg) {\n        return this.epilogue(msg);\n    }\n    example(cmd, description) {\n        argsert('<string|array> [string]', [cmd, description], arguments.length);\n        if (Array.isArray(cmd)) {\n            cmd.forEach(exampleParams => this.example(...exampleParams));\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").example(cmd, description);\n        }\n        return this;\n    }\n    exit(code, err) {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, err, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.exit(code);\n    }\n    exitProcess(enabled = true) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, \"f\");\n        return this;\n    }\n    fail(f) {\n        argsert('<function|boolean>', [f], arguments.length);\n        if (typeof f === 'boolean' && f !== false) {\n            throw new YError(\"Invalid first argument. Expected function or boolean 'false'\");\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").failFn(f);\n        return this;\n    }\n    getAliases() {\n        return this.parsed ? this.parsed.aliases : {};\n    }\n    async getCompletion(args, done) {\n        argsert('<array> [function]', [args, done], arguments.length);\n        if (!done) {\n            return new Promise((resolve, reject) => {\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, (err, completions) => {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(completions);\n                });\n            });\n        }\n        else {\n            return __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, done);\n        }\n    }\n    getDemandedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedOptions;\n    }\n    getDemandedCommands() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands;\n    }\n    getDeprecatedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions;\n    }\n    getDetectLocale() {\n        return __classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\");\n    }\n    getExitProcess() {\n        return __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\");\n    }\n    getGroups() {\n        return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"));\n    }\n    getHelp() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    return parse.then(() => {\n                        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                    });\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                return builderResponse.then(() => {\n                    return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                });\n            }\n        }\n        return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help());\n    }\n    getOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\");\n    }\n    getStrict() {\n        return __classPrivateFieldGet(this, _YargsInstance_strict, \"f\");\n    }\n    getStrictCommands() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\");\n    }\n    getStrictOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\");\n    }\n    global(globals, global) {\n        argsert('<string|array> [boolean]', [globals, global], arguments.length);\n        globals = [].concat(globals);\n        if (global !== false) {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.filter(l => globals.indexOf(l) === -1);\n        }\n        else {\n            globals.forEach(g => {\n                if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.includes(g))\n                    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.push(g);\n            });\n        }\n        return this;\n    }\n    group(opts, groupName) {\n        argsert('<string|array> <string>', [opts, groupName], arguments.length);\n        const existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName];\n        if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName]) {\n            delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName];\n        }\n        const seen = {};\n        __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName] = (existing || []).concat(opts).filter(key => {\n            if (seen[key])\n                return false;\n            return (seen[key] = true);\n        });\n        return this;\n    }\n    hide(key) {\n        argsert('<string>', [key], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").hiddenOptions.push(key);\n        return this;\n    }\n    implies(key, value) {\n        argsert('<string|object> [number|string|array]', [key, value], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implies(key, value);\n        return this;\n    }\n    locale(locale) {\n        argsert('[string]', [locale], arguments.length);\n        if (locale === undefined) {\n            this[kGuessLocale]();\n            return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.getLocale();\n        }\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.setLocale(locale);\n        return this;\n    }\n    middleware(callback, applyBeforeValidation, global) {\n        return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addMiddleware(callback, !!applyBeforeValidation, global);\n    }\n    nargs(key, value) {\n        argsert('<string|object|array> [number]', [key, value], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);\n        return this;\n    }\n    normalize(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('normalize', keys);\n        return this;\n    }\n    number(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('number', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    option(key, opt) {\n        argsert('<string|object> [object]', [key, opt], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                this.options(k, key[k]);\n            });\n        }\n        else {\n            if (typeof opt !== 'object') {\n                opt = {};\n            }\n            this[kTrackManuallySetKeys](key);\n            if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {\n                this[kEmitWarning]([\n                    '\"version\" is a reserved word.',\n                    'Please do one of the following:',\n                    '- Disable version with `yargs.version(false)` if using \"version\" as an option',\n                    '- Use the built-in `yargs.version` method instead (if applicable)',\n                    '- Use a different option key',\n                    'https://yargs.js.org/docs/#api-reference-version',\n                ].join('\\n'), undefined, 'versionWarning');\n            }\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[key] = true;\n            if (opt.alias)\n                this.alias(key, opt.alias);\n            const deprecate = opt.deprecate || opt.deprecated;\n            if (deprecate) {\n                this.deprecateOption(key, deprecate);\n            }\n            const demand = opt.demand || opt.required || opt.require;\n            if (demand) {\n                this.demand(key, demand);\n            }\n            if (opt.demandOption) {\n                this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);\n            }\n            if (opt.conflicts) {\n                this.conflicts(key, opt.conflicts);\n            }\n            if ('default' in opt) {\n                this.default(key, opt.default);\n            }\n            if (opt.implies !== undefined) {\n                this.implies(key, opt.implies);\n            }\n            if (opt.nargs !== undefined) {\n                this.nargs(key, opt.nargs);\n            }\n            if (opt.config) {\n                this.config(key, opt.configParser);\n            }\n            if (opt.normalize) {\n                this.normalize(key);\n            }\n            if (opt.choices) {\n                this.choices(key, opt.choices);\n            }\n            if (opt.coerce) {\n                this.coerce(key, opt.coerce);\n            }\n            if (opt.group) {\n                this.group(key, opt.group);\n            }\n            if (opt.boolean || opt.type === 'boolean') {\n                this.boolean(key);\n                if (opt.alias)\n                    this.boolean(opt.alias);\n            }\n            if (opt.array || opt.type === 'array') {\n                this.array(key);\n                if (opt.alias)\n                    this.array(opt.alias);\n            }\n            if (opt.number || opt.type === 'number') {\n                this.number(key);\n                if (opt.alias)\n                    this.number(opt.alias);\n            }\n            if (opt.string || opt.type === 'string') {\n                this.string(key);\n                if (opt.alias)\n                    this.string(opt.alias);\n            }\n            if (opt.count || opt.type === 'count') {\n                this.count(key);\n            }\n            if (typeof opt.global === 'boolean') {\n                this.global(key, opt.global);\n            }\n            if (opt.defaultDescription) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = opt.defaultDescription;\n            }\n            if (opt.skipValidation) {\n                this.skipValidation(key);\n            }\n            const desc = opt.describe || opt.description || opt.desc;\n            const descriptions = __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions();\n            if (!Object.prototype.hasOwnProperty.call(descriptions, key) ||\n                typeof desc === 'string') {\n                this.describe(key, desc);\n            }\n            if (opt.hidden) {\n                this.hide(key);\n            }\n            if (opt.requiresArg) {\n                this.requiresArg(key);\n            }\n        }\n        return this;\n    }\n    options(key, opt) {\n        return this.option(key, opt);\n    }\n    parse(args, shortCircuit, _parseFn) {\n        argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);\n        this[kFreeze]();\n        if (typeof args === 'undefined') {\n            args = __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        }\n        if (typeof shortCircuit === 'object') {\n            __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, \"f\");\n            shortCircuit = _parseFn;\n        }\n        if (typeof shortCircuit === 'function') {\n            __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, \"f\");\n            shortCircuit = false;\n        }\n        if (!shortCircuit)\n            __classPrivateFieldSet(this, _YargsInstance_processArgs, args, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, \"f\");\n        const parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);\n        const tmpParsed = this.parsed;\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").setParsed(this.parsed);\n        if (isPromise(parsed)) {\n            return parsed\n                .then(argv => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                return argv;\n            })\n                .catch(err => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) {\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")(err, this.parsed.argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                }\n                throw err;\n            })\n                .finally(() => {\n                this[kUnfreeze]();\n                this.parsed = tmpParsed;\n            });\n        }\n        else {\n            if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n            this[kUnfreeze]();\n            this.parsed = tmpParsed;\n        }\n        return parsed;\n    }\n    parseAsync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        return !isPromise(maybePromise)\n            ? Promise.resolve(maybePromise)\n            : maybePromise;\n    }\n    parseSync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        if (isPromise(maybePromise)) {\n            throw new YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');\n        }\n        return maybePromise;\n    }\n    parserConfiguration(config) {\n        argsert('<object>', [config], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, \"f\");\n        return this;\n    }\n    pkgConf(key, rootPath) {\n        argsert('<string> [string]', [key, rootPath], arguments.length);\n        let conf = null;\n        const obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"));\n        if (obj[key] && typeof obj[key] === 'object') {\n            conf = applyExtends(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(conf);\n        }\n        return this;\n    }\n    positional(key, opts) {\n        argsert('<string> <object>', [key, opts], arguments.length);\n        const supportedOpts = [\n            'default',\n            'defaultDescription',\n            'implies',\n            'normalize',\n            'choices',\n            'conflicts',\n            'coerce',\n            'type',\n            'describe',\n            'desc',\n            'description',\n            'alias',\n        ];\n        opts = objFilter(opts, (k, v) => {\n            if (k === 'type' && !['string', 'number', 'boolean'].includes(v))\n                return false;\n            return supportedOpts.includes(k);\n        });\n        const fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands.length - 1];\n        const parseOptions = fullCommand\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").cmdToParseOptions(fullCommand)\n            : {\n                array: [],\n                alias: {},\n                default: {},\n                demand: {},\n            };\n        objectKeys(parseOptions).forEach(pk => {\n            const parseOption = parseOptions[pk];\n            if (Array.isArray(parseOption)) {\n                if (parseOption.indexOf(key) !== -1)\n                    opts[pk] = true;\n            }\n            else {\n                if (parseOption[key] && !(pk in opts))\n                    opts[pk] = parseOption[key];\n            }\n        });\n        this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getPositionalGroupName());\n        return this.option(key, opts);\n    }\n    recommendCommands(recommend = true) {\n        argsert('[boolean]', [recommend], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, \"f\");\n        return this;\n    }\n    required(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    require(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    requiresArg(keys) {\n        argsert('<array|string|object> [number]', [keys], arguments.length);\n        if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").narg[keys]) {\n            return this;\n        }\n        else {\n            this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);\n        }\n        return this;\n    }\n    showCompletionScript($0, cmd) {\n        argsert('[string] [string]', [$0, cmd], arguments.length);\n        $0 = $0 || this.$0;\n        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion'));\n        return this;\n    }\n    showHelp(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    parse.then(() => {\n                        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                    });\n                    return this;\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                builderResponse.then(() => {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                });\n                return this;\n            }\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n        return this;\n    }\n    scriptName(scriptName) {\n        this.customScriptName = true;\n        this.$0 = scriptName;\n        return this;\n    }\n    showHelpOnFail(enabled, message) {\n        argsert('[boolean|string] [string]', [enabled, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelpOnFail(enabled, message);\n        return this;\n    }\n    showVersion(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion(level);\n        return this;\n    }\n    skipValidation(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('skipValidation', keys);\n        return this;\n    }\n    strict(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, \"f\");\n        return this;\n    }\n    strictCommands(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, \"f\");\n        return this;\n    }\n    strictOptions(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, \"f\");\n        return this;\n    }\n    string(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('string', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    terminalWidth() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.stdColumns;\n    }\n    updateLocale(obj) {\n        return this.updateStrings(obj);\n    }\n    updateStrings(obj) {\n        argsert('<object>', [obj], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.updateLocale(obj);\n        return this;\n    }\n    usage(msg, description, builder, handler) {\n        argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);\n        if (description !== undefined) {\n            assertNotStrictEqual(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if ((msg || '').match(/^\\$0( |$)/)) {\n                return this.command(msg, description, builder, handler);\n            }\n            else {\n                throw new YError('.usage() description must start with $0 if being used as alias for .command()');\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").usage(msg);\n            return this;\n        }\n    }\n    usageConfiguration(config) {\n        argsert('<object>', [config], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_usageConfig, config, \"f\");\n        return this;\n    }\n    version(opt, msg, ver) {\n        const defaultVersionOpt = 'version';\n        argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(undefined);\n            __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, \"f\");\n        }\n        if (arguments.length === 0) {\n            ver = this[kGuessVersion]();\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 1) {\n            if (opt === false) {\n                return this;\n            }\n            ver = opt;\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 2) {\n            ver = msg;\n            msg = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, \"f\");\n        msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show version number');\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(ver || undefined);\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"), msg);\n        return this;\n    }\n    wrap(cols) {\n        argsert('<number|null|undefined>', [cols], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").wrap(cols);\n        return this;\n    }\n    [(_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_isGlobalContext = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_usageConfig = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash)](argv) {\n        if (!argv._ || !argv['--'])\n            return argv;\n        argv._.push.apply(argv._, argv['--']);\n        try {\n            delete argv['--'];\n        }\n        catch (_err) { }\n        return argv;\n    }\n    [kCreateLogger]() {\n        return {\n            log: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.log(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n            error: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.error(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n        };\n    }\n    [kDeleteFromParserHintObject](optionKey) {\n        objectKeys(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")).forEach((hintKey) => {\n            if (((key) => key === 'configObjects')(hintKey))\n                return;\n            const hint = __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[hintKey];\n            if (Array.isArray(hint)) {\n                if (hint.includes(optionKey))\n                    hint.splice(hint.indexOf(optionKey), 1);\n            }\n            else if (typeof hint === 'object') {\n                delete hint[optionKey];\n            }\n        });\n        delete __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions()[optionKey];\n    }\n    [kEmitWarning](warning, type, deduplicationId) {\n        if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId]) {\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.emitWarning(warning, type);\n            __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId] = true;\n        }\n    }\n    [kFreeze]() {\n        __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").push({\n            options: __classPrivateFieldGet(this, _YargsInstance_options, \"f\"),\n            configObjects: __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects.slice(0),\n            exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"),\n            groups: __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"),\n            strict: __classPrivateFieldGet(this, _YargsInstance_strict, \"f\"),\n            strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\"),\n            strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\"),\n            completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"),\n            output: __classPrivateFieldGet(this, _YargsInstance_output, \"f\"),\n            exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"),\n            hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\"),\n            parsed: this.parsed,\n            parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"),\n            parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"),\n        });\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").freeze();\n    }\n    [kGetDollarZero]() {\n        let $0 = '';\n        let default$0;\n        if (/\\b(node|iojs|electron)(\\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv()[0])) {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(1, 2);\n        }\n        else {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(0, 1);\n        }\n        $0 = default$0\n            .map(x => {\n            const b = this[kRebase](__classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), x);\n            return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n        })\n            .join(' ')\n            .trim();\n        if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_') &&\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_')) {\n            $0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")\n                .getEnv('_')\n                .replace(`${__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.execPath())}/`, '');\n        }\n        return $0;\n    }\n    [kGetParserConfiguration]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parserConfig, \"f\");\n    }\n    [kGetUsageConfiguration]() {\n        return __classPrivateFieldGet(this, _YargsInstance_usageConfig, \"f\");\n    }\n    [kGuessLocale]() {\n        if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\"))\n            return;\n        const locale = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_ALL') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_MESSAGES') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANG') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANGUAGE') ||\n            'en_US';\n        this.locale(locale.replace(/[.:].*/, ''));\n    }\n    [kGuessVersion]() {\n        const obj = this[kPkgUp]();\n        return obj.version || 'unknown';\n    }\n    [kParsePositionalNumbers](argv) {\n        const args = argv['--'] ? argv['--'] : argv._;\n        for (let i = 0, arg; (arg = args[i]) !== undefined; i++) {\n            if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.looksLikeNumber(arg) &&\n                Number.isSafeInteger(Math.floor(parseFloat(`${arg}`)))) {\n                args[i] = Number(arg);\n            }\n        }\n        return argv;\n    }\n    [kPkgUp](rootPath) {\n        const npath = rootPath || '*';\n        if (__classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath])\n            return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n        let obj = {};\n        try {\n            let startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").mainFilename;\n            if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.extname(startDir)) {\n                startDir = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(startDir);\n            }\n            const pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").findUp(startDir, (dir, names) => {\n                if (names.includes('package.json')) {\n                    return 'package.json';\n                }\n                else {\n                    return undefined;\n                }\n            });\n            assertNotStrictEqual(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").readFileSync(pkgJsonPath, 'utf8'));\n        }\n        catch (_noop) { }\n        __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath] = obj || {};\n        return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n    }\n    [kPopulateParserHintArray](type, keys) {\n        keys = [].concat(keys);\n        keys.forEach(key => {\n            key = this[kSanitizeKey](key);\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type].push(key);\n        });\n    }\n    [kPopulateParserHintSingleValueDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = value;\n        });\n    }\n    [kPopulateParserHintArrayDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] || []).concat(value);\n        });\n    }\n    [kPopulateParserHintDictionary](builder, type, key, value, singleKeyHandler) {\n        if (Array.isArray(key)) {\n            key.forEach(k => {\n                builder(k, value);\n            });\n        }\n        else if (((key) => typeof key === 'object')(key)) {\n            for (const k of objectKeys(key)) {\n                builder(k, key[k]);\n            }\n        }\n        else {\n            singleKeyHandler(type, this[kSanitizeKey](key), value);\n        }\n    }\n    [kSanitizeKey](key) {\n        if (key === '__proto__')\n            return '___proto___';\n        return key;\n    }\n    [kSetKey](key, set) {\n        this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);\n        return this;\n    }\n    [kUnfreeze]() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").pop();\n        assertNotStrictEqual(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        let configObjects;\n        (_a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, {\n            options: ({ set value(_o) { __classPrivateFieldSet(_a, _YargsInstance_options, _o, \"f\"); } }).value,\n            configObjects,\n            exitProcess: ({ set value(_o) { __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, \"f\"); } }).value,\n            groups: ({ set value(_o) { __classPrivateFieldSet(_c, _YargsInstance_groups, _o, \"f\"); } }).value,\n            output: ({ set value(_o) { __classPrivateFieldSet(_d, _YargsInstance_output, _o, \"f\"); } }).value,\n            exitError: ({ set value(_o) { __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, \"f\"); } }).value,\n            hasOutput: ({ set value(_o) { __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, \"f\"); } }).value,\n            parsed: this.parsed,\n            strict: ({ set value(_o) { __classPrivateFieldSet(_g, _YargsInstance_strict, _o, \"f\"); } }).value,\n            strictCommands: ({ set value(_o) { __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, \"f\"); } }).value,\n            strictOptions: ({ set value(_o) { __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, \"f\"); } }).value,\n            completionCommand: ({ set value(_o) { __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, \"f\"); } }).value,\n            parseFn: ({ set value(_o) { __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, \"f\"); } }).value,\n            parseContext: ({ set value(_o) { __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, \"f\"); } }).value,\n        } = frozen);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = configObjects;\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").unfreeze();\n    }\n    [kValidateAsync](validation, argv) {\n        return maybeAsyncResult(argv, result => {\n            validation(result);\n            return result;\n        });\n    }\n    getInternalMethods() {\n        return {\n            getCommandInstance: this[kGetCommandInstance].bind(this),\n            getContext: this[kGetContext].bind(this),\n            getHasOutput: this[kGetHasOutput].bind(this),\n            getLoggerInstance: this[kGetLoggerInstance].bind(this),\n            getParseContext: this[kGetParseContext].bind(this),\n            getParserConfiguration: this[kGetParserConfiguration].bind(this),\n            getUsageConfiguration: this[kGetUsageConfiguration].bind(this),\n            getUsageInstance: this[kGetUsageInstance].bind(this),\n            getValidationInstance: this[kGetValidationInstance].bind(this),\n            hasParseCallback: this[kHasParseCallback].bind(this),\n            isGlobalContext: this[kIsGlobalContext].bind(this),\n            postProcess: this[kPostProcess].bind(this),\n            reset: this[kReset].bind(this),\n            runValidation: this[kRunValidation].bind(this),\n            runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),\n            setHasOutput: this[kSetHasOutput].bind(this),\n        };\n    }\n    [kGetCommandInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_command, \"f\");\n    }\n    [kGetContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_context, \"f\");\n    }\n    [kGetHasOutput]() {\n        return __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\");\n    }\n    [kGetLoggerInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_logger, \"f\");\n    }\n    [kGetParseContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\") || {};\n    }\n    [kGetUsageInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\");\n    }\n    [kGetValidationInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_validation, \"f\");\n    }\n    [kHasParseCallback]() {\n        return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\");\n    }\n    [kIsGlobalContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_isGlobalContext, \"f\");\n    }\n    [kPostProcess](argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {\n        if (calledFromCommand)\n            return argv;\n        if (isPromise(argv))\n            return argv;\n        if (!populateDoubleDash) {\n            argv = this[kCopyDoubleDash](argv);\n        }\n        const parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] ||\n            this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;\n        if (parsePositionalNumbers) {\n            argv = this[kParsePositionalNumbers](argv);\n        }\n        if (runGlobalMiddleware) {\n            argv = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n        }\n        return argv;\n    }\n    [kReset](aliases = {}) {\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\") || {}, \"f\");\n        const tmpOptions = {};\n        tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local || [];\n        tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || [];\n        const localLookup = {};\n        tmpOptions.local.forEach(l => {\n            localLookup[l] = true;\n            (aliases[l] || []).forEach(a => {\n                localLookup[a] = true;\n            });\n        });\n        Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, \"f\")).reduce((acc, groupName) => {\n            const keys = __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName].filter(key => !(key in localLookup));\n            if (keys.length > 0) {\n                acc[groupName] = keys;\n            }\n            return acc;\n        }, {}));\n        __classPrivateFieldSet(this, _YargsInstance_groups, {}, \"f\");\n        const arrayOptions = [\n            'array',\n            'boolean',\n            'string',\n            'skipValidation',\n            'count',\n            'normalize',\n            'number',\n            'hiddenOptions',\n        ];\n        const objectOptions = [\n            'narg',\n            'key',\n            'alias',\n            'default',\n            'defaultDescription',\n            'config',\n            'choices',\n            'demandedOptions',\n            'demandedCommands',\n            'deprecatedOptions',\n        ];\n        arrayOptions.forEach(k => {\n            tmpOptions[k] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k] || []).filter((k) => !localLookup[k]);\n        });\n        objectOptions.forEach((k) => {\n            tmpOptions[k] = objFilter(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k], k => !localLookup[k]);\n        });\n        tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").reset(localLookup)\n            : Usage(this, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").reset(localLookup)\n            : Validation(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").reset()\n            : Command(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_completion, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_completion, Completion(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").reset();\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_output, '', \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, \"f\");\n        this.parsed = false;\n        return this;\n    }\n    [kRebase](base, dir) {\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.relative(base, dir);\n    }\n    [kRunYargsParserAndExecuteCommands](args, shortCircuit, calledFromCommand, commandIndex = 0, helpOnly = false) {\n        let skipValidation = !!calledFromCommand || helpOnly;\n        args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").__ = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__;\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration = this[kGetParserConfiguration]();\n        const populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration['populate--'];\n        const config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration, {\n            'populate--': true,\n        });\n        const parsed = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), {\n            configuration: { 'parse-positional-numbers': false, ...config },\n        }));\n        const argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"));\n        let argvPromise = undefined;\n        const aliases = parsed.aliases;\n        let helpOptSet = false;\n        let versionOptSet = false;\n        Object.keys(argv).forEach(key => {\n            if (key === __classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\") && argv[key]) {\n                helpOptSet = true;\n            }\n            else if (key === __classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && argv[key]) {\n                versionOptSet = true;\n            }\n        });\n        argv.$0 = this.$0;\n        this.parsed = parsed;\n        if (commandIndex === 0) {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").clearCachedHelpMessage();\n        }\n        try {\n            this[kGuessLocale]();\n            if (shortCircuit) {\n                return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n                const helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")]\n                    .concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")] || [])\n                    .filter(k => k.length > 1);\n                if (helpCmds.includes('' + argv._[argv._.length - 1])) {\n                    argv._.pop();\n                    helpOptSet = true;\n                }\n            }\n            __classPrivateFieldSet(this, _YargsInstance_isGlobalContext, false, \"f\");\n            const handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").getCommands();\n            const requestCompletions = __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey in argv;\n            const skipRecommendation = helpOptSet || requestCompletions || helpOnly;\n            if (argv._.length) {\n                if (handlerKeys.length) {\n                    let firstUnknownCommand;\n                    for (let i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {\n                        cmd = String(argv._[i]);\n                        if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                            return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n                        }\n                        else if (!firstUnknownCommand &&\n                            cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            firstUnknownCommand = cmd;\n                            break;\n                        }\n                    }\n                    if (!__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() &&\n                        __classPrivateFieldGet(this, _YargsInstance_recommendCommands, \"f\") &&\n                        firstUnknownCommand &&\n                        !skipRecommendation) {\n                        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").recommendCommands(firstUnknownCommand, handlerKeys);\n                    }\n                }\n                if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") &&\n                    argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) &&\n                    !requestCompletions) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    this.showCompletionScript();\n                    this.exit(0);\n                }\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && !skipRecommendation) {\n                const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (requestCompletions) {\n                if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                    setBlocking(true);\n                args = [].concat(args);\n                const completionArgs = args.slice(args.indexOf(`--${__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey}`) + 1);\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(completionArgs, (err, completions) => {\n                    if (err)\n                        throw new YError(err.message);\n                    (completions || []).forEach(completion => {\n                        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(completion);\n                    });\n                    this.exit(0);\n                });\n                return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\")) {\n                if (helpOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    this.showHelp('log');\n                    this.exit(0);\n                }\n                else if (versionOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion('log');\n                    this.exit(0);\n                }\n            }\n            if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.length > 0) {\n                skipValidation = Object.keys(argv).some(key => __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.indexOf(key) >= 0 && argv[key] === true);\n            }\n            if (!skipValidation) {\n                if (parsed.error)\n                    throw new YError(parsed.error.message);\n                if (!requestCompletions) {\n                    const validation = this[kRunValidation](aliases, {}, parsed.error);\n                    if (!calledFromCommand) {\n                        argvPromise = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), true);\n                    }\n                    argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);\n                    if (isPromise(argvPromise) && !calledFromCommand) {\n                        argvPromise = argvPromise.then(() => {\n                            return applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n                        });\n                    }\n                }\n            }\n        }\n        catch (err) {\n            if (err instanceof YError)\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message, err);\n            else\n                throw err;\n        }\n        return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);\n    }\n    [kRunValidation](aliases, positionalMap, parseErrors, isDefaultCommand) {\n        const demandedOptions = { ...this.getDemandedOptions() };\n        return (argv) => {\n            if (parseErrors)\n                throw new YError(parseErrors.message);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").nonOptionCount(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").requiredArguments(argv, demandedOptions);\n            let failedStrictCommands = false;\n            if (__classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\")) {\n                failedStrictCommands = __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownCommands(argv);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_strict, \"f\") && !failedStrictCommands) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);\n            }\n            else if (__classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\")) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, {}, false, false);\n            }\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").limitedChoices(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implications(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicting(argv);\n        };\n    }\n    [kSetHasOutput]() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    }\n    [kTrackManuallySetKeys](keys) {\n        if (typeof keys === 'string') {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        }\n        else {\n            for (const k of keys) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[k] = true;\n            }\n        }\n    }\n}\nexport function isYargsInstance(y) {\n    return !!y && typeof y.getInternalMethods === 'function';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}