{"ast":null,"code":"import { argsert } from './argsert.js';\nimport { isPromise } from './utils/is-promise.js';\nexport class GlobalMiddleware {\n  constructor(yargs) {\n    this.globalMiddleware = [];\n    this.frozens = [];\n    this.yargs = yargs;\n  }\n  addMiddleware(callback, applyBeforeValidation, global = true, mutates = false) {\n    argsert('<array|function> [boolean] [boolean] [boolean]', [callback, applyBeforeValidation, global], arguments.length);\n    if (Array.isArray(callback)) {\n      for (let i = 0; i < callback.length; i++) {\n        if (typeof callback[i] !== 'function') {\n          throw Error('middleware must be a function');\n        }\n        const m = callback[i];\n        m.applyBeforeValidation = applyBeforeValidation;\n        m.global = global;\n      }\n      Array.prototype.push.apply(this.globalMiddleware, callback);\n    } else if (typeof callback === 'function') {\n      const m = callback;\n      m.applyBeforeValidation = applyBeforeValidation;\n      m.global = global;\n      m.mutates = mutates;\n      this.globalMiddleware.push(callback);\n    }\n    return this.yargs;\n  }\n  addCoerceMiddleware(callback, option) {\n    const aliases = this.yargs.getAliases();\n    this.globalMiddleware = this.globalMiddleware.filter(m => {\n      const toCheck = [...(aliases[option] || []), option];\n      if (!m.option) return true;else return !toCheck.includes(m.option);\n    });\n    callback.option = option;\n    return this.addMiddleware(callback, true, true, true);\n  }\n  getMiddleware() {\n    return this.globalMiddleware;\n  }\n  freeze() {\n    this.frozens.push([...this.globalMiddleware]);\n  }\n  unfreeze() {\n    const frozen = this.frozens.pop();\n    if (frozen !== undefined) this.globalMiddleware = frozen;\n  }\n  reset() {\n    this.globalMiddleware = this.globalMiddleware.filter(m => m.global);\n  }\n}\nexport function commandMiddlewareFactory(commandMiddleware) {\n  if (!commandMiddleware) return [];\n  return commandMiddleware.map(middleware => {\n    middleware.applyBeforeValidation = false;\n    return middleware;\n  });\n}\nexport function applyMiddleware(argv, yargs, middlewares, beforeValidation) {\n  return middlewares.reduce((acc, middleware) => {\n    if (middleware.applyBeforeValidation !== beforeValidation) {\n      return acc;\n    }\n    if (middleware.mutates) {\n      if (middleware.applied) return acc;\n      middleware.applied = true;\n    }\n    if (isPromise(acc)) {\n      return acc.then(initialObj => Promise.all([initialObj, middleware(initialObj, yargs)])).then(([initialObj, middlewareObj]) => Object.assign(initialObj, middlewareObj));\n    } else {\n      const result = middleware(acc, yargs);\n      return isPromise(result) ? result.then(middlewareObj => Object.assign(acc, middlewareObj)) : Object.assign(acc, result);\n    }\n  }, argv);\n}","map":{"version":3,"names":["argsert","isPromise","GlobalMiddleware","constructor","yargs","globalMiddleware","frozens","addMiddleware","callback","applyBeforeValidation","global","mutates","arguments","length","Array","isArray","i","Error","m","prototype","push","apply","addCoerceMiddleware","option","aliases","getAliases","filter","toCheck","includes","getMiddleware","freeze","unfreeze","frozen","pop","undefined","reset","commandMiddlewareFactory","commandMiddleware","map","middleware","applyMiddleware","argv","middlewares","beforeValidation","reduce","acc","applied","then","initialObj","Promise","all","middlewareObj","Object","assign","result"],"sources":["/Users/kseniavoronova/today-i-learned-react/node_modules/yargs/build/lib/middleware.js"],"sourcesContent":["import { argsert } from './argsert.js';\nimport { isPromise } from './utils/is-promise.js';\nexport class GlobalMiddleware {\n    constructor(yargs) {\n        this.globalMiddleware = [];\n        this.frozens = [];\n        this.yargs = yargs;\n    }\n    addMiddleware(callback, applyBeforeValidation, global = true, mutates = false) {\n        argsert('<array|function> [boolean] [boolean] [boolean]', [callback, applyBeforeValidation, global], arguments.length);\n        if (Array.isArray(callback)) {\n            for (let i = 0; i < callback.length; i++) {\n                if (typeof callback[i] !== 'function') {\n                    throw Error('middleware must be a function');\n                }\n                const m = callback[i];\n                m.applyBeforeValidation = applyBeforeValidation;\n                m.global = global;\n            }\n            Array.prototype.push.apply(this.globalMiddleware, callback);\n        }\n        else if (typeof callback === 'function') {\n            const m = callback;\n            m.applyBeforeValidation = applyBeforeValidation;\n            m.global = global;\n            m.mutates = mutates;\n            this.globalMiddleware.push(callback);\n        }\n        return this.yargs;\n    }\n    addCoerceMiddleware(callback, option) {\n        const aliases = this.yargs.getAliases();\n        this.globalMiddleware = this.globalMiddleware.filter(m => {\n            const toCheck = [...(aliases[option] || []), option];\n            if (!m.option)\n                return true;\n            else\n                return !toCheck.includes(m.option);\n        });\n        callback.option = option;\n        return this.addMiddleware(callback, true, true, true);\n    }\n    getMiddleware() {\n        return this.globalMiddleware;\n    }\n    freeze() {\n        this.frozens.push([...this.globalMiddleware]);\n    }\n    unfreeze() {\n        const frozen = this.frozens.pop();\n        if (frozen !== undefined)\n            this.globalMiddleware = frozen;\n    }\n    reset() {\n        this.globalMiddleware = this.globalMiddleware.filter(m => m.global);\n    }\n}\nexport function commandMiddlewareFactory(commandMiddleware) {\n    if (!commandMiddleware)\n        return [];\n    return commandMiddleware.map(middleware => {\n        middleware.applyBeforeValidation = false;\n        return middleware;\n    });\n}\nexport function applyMiddleware(argv, yargs, middlewares, beforeValidation) {\n    return middlewares.reduce((acc, middleware) => {\n        if (middleware.applyBeforeValidation !== beforeValidation) {\n            return acc;\n        }\n        if (middleware.mutates) {\n            if (middleware.applied)\n                return acc;\n            middleware.applied = true;\n        }\n        if (isPromise(acc)) {\n            return acc\n                .then(initialObj => Promise.all([initialObj, middleware(initialObj, yargs)]))\n                .then(([initialObj, middlewareObj]) => Object.assign(initialObj, middlewareObj));\n        }\n        else {\n            const result = middleware(acc, yargs);\n            return isPromise(result)\n                ? result.then(middlewareObj => Object.assign(acc, middlewareObj))\n                : Object.assign(acc, result);\n        }\n    }, argv);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}