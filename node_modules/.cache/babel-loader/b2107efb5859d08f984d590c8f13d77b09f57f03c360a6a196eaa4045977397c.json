{"ast":null,"code":"import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport class Completion {\n  constructor(yargs, usage, command, shim) {\n    var _a, _b, _c;\n    this.yargs = yargs;\n    this.usage = usage;\n    this.command = command;\n    this.shim = shim;\n    this.completionKey = 'get-yargs-completions';\n    this.aliases = null;\n    this.customCompletionFunction = null;\n    this.indexAfterLastReset = 0;\n    this.zshShell = (_c = ((_a = this.shim.getEnv('SHELL')) === null || _a === void 0 ? void 0 : _a.includes('zsh')) || ((_b = this.shim.getEnv('ZSH_NAME')) === null || _b === void 0 ? void 0 : _b.includes('zsh'))) !== null && _c !== void 0 ? _c : false;\n  }\n  defaultCompletion(args, argv, current, done) {\n    const handlers = this.command.getCommandHandlers();\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      if (handlers[args[i]] && handlers[args[i]].builder) {\n        const builder = handlers[args[i]].builder;\n        if (isCommandBuilderCallback(builder)) {\n          this.indexAfterLastReset = i + 1;\n          const y = this.yargs.getInternalMethods().reset();\n          builder(y, true);\n          return y.argv;\n        }\n      }\n    }\n    const completions = [];\n    this.commandCompletions(completions, args, current);\n    this.optionCompletions(completions, args, argv, current);\n    this.choicesFromOptionsCompletions(completions, args, argv, current);\n    this.choicesFromPositionalsCompletions(completions, args, argv, current);\n    done(null, completions);\n  }\n  commandCompletions(completions, args, current) {\n    const parentCommands = this.yargs.getInternalMethods().getContext().commands;\n    if (!current.match(/^-/) && parentCommands[parentCommands.length - 1] !== current && !this.previousArgHasChoices(args)) {\n      this.usage.getCommands().forEach(usageCommand => {\n        const commandName = parseCommand(usageCommand[0]).cmd;\n        if (args.indexOf(commandName) === -1) {\n          if (!this.zshShell) {\n            completions.push(commandName);\n          } else {\n            const desc = usageCommand[1] || '';\n            completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n          }\n        }\n      });\n    }\n  }\n  optionCompletions(completions, args, argv, current) {\n    if ((current.match(/^-/) || current === '' && completions.length === 0) && !this.previousArgHasChoices(args)) {\n      const options = this.yargs.getOptions();\n      const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n      Object.keys(options.key).forEach(key => {\n        const negable = !!options.configuration['boolean-negation'] && options.boolean.includes(key);\n        const isPositionalKey = positionalKeys.includes(key);\n        if (!isPositionalKey && !options.hiddenOptions.includes(key) && !this.argsContainKey(args, key, negable)) {\n          this.completeOptionKey(key, completions, current, negable && !!options.default[key]);\n        }\n      });\n    }\n  }\n  choicesFromOptionsCompletions(completions, args, argv, current) {\n    if (this.previousArgHasChoices(args)) {\n      const choices = this.getPreviousArgChoices(args);\n      if (choices && choices.length > 0) {\n        completions.push(...choices.map(c => c.replace(/:/g, '\\\\:')));\n      }\n    }\n  }\n  choicesFromPositionalsCompletions(completions, args, argv, current) {\n    if (current === '' && completions.length > 0 && this.previousArgHasChoices(args)) {\n      return;\n    }\n    const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n    const offset = Math.max(this.indexAfterLastReset, this.yargs.getInternalMethods().getContext().commands.length + 1);\n    const positionalKey = positionalKeys[argv._.length - offset - 1];\n    if (!positionalKey) {\n      return;\n    }\n    const choices = this.yargs.getOptions().choices[positionalKey] || [];\n    for (const choice of choices) {\n      if (choice.startsWith(current)) {\n        completions.push(choice.replace(/:/g, '\\\\:'));\n      }\n    }\n  }\n  getPreviousArgChoices(args) {\n    if (args.length < 1) return;\n    let previousArg = args[args.length - 1];\n    let filter = '';\n    if (!previousArg.startsWith('-') && args.length > 1) {\n      filter = previousArg;\n      previousArg = args[args.length - 2];\n    }\n    if (!previousArg.startsWith('-')) return;\n    const previousArgKey = previousArg.replace(/^-+/, '');\n    const options = this.yargs.getOptions();\n    const possibleAliases = [previousArgKey, ...(this.yargs.getAliases()[previousArgKey] || [])];\n    let choices;\n    for (const possibleAlias of possibleAliases) {\n      if (Object.prototype.hasOwnProperty.call(options.key, possibleAlias) && Array.isArray(options.choices[possibleAlias])) {\n        choices = options.choices[possibleAlias];\n        break;\n      }\n    }\n    if (choices) {\n      return choices.filter(choice => !filter || choice.startsWith(filter));\n    }\n  }\n  previousArgHasChoices(args) {\n    const choices = this.getPreviousArgChoices(args);\n    return choices !== undefined && choices.length > 0;\n  }\n  argsContainKey(args, key, negable) {\n    const argsContains = s => args.indexOf((/^[^0-9]$/.test(s) ? '-' : '--') + s) !== -1;\n    if (argsContains(key)) return true;\n    if (negable && argsContains(`no-${key}`)) return true;\n    if (this.aliases) {\n      for (const alias of this.aliases[key]) {\n        if (argsContains(alias)) return true;\n      }\n    }\n    return false;\n  }\n  completeOptionKey(key, completions, current, negable) {\n    var _a, _b, _c, _d;\n    let keyWithDesc = key;\n    if (this.zshShell) {\n      const descs = this.usage.getDescriptions();\n      const aliasKey = (_b = (_a = this === null || this === void 0 ? void 0 : this.aliases) === null || _a === void 0 ? void 0 : _a[key]) === null || _b === void 0 ? void 0 : _b.find(alias => {\n        const desc = descs[alias];\n        return typeof desc === 'string' && desc.length > 0;\n      });\n      const descFromAlias = aliasKey ? descs[aliasKey] : undefined;\n      const desc = (_d = (_c = descs[key]) !== null && _c !== void 0 ? _c : descFromAlias) !== null && _d !== void 0 ? _d : '';\n      keyWithDesc = `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '').replace(/(\\r\\n|\\n|\\r)/gm, ' ')}`;\n    }\n    const startsByTwoDashes = s => /^--/.test(s);\n    const isShortOption = s => /^[^0-9]$/.test(s);\n    const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n    completions.push(dashes + keyWithDesc);\n    if (negable) {\n      completions.push(dashes + 'no-' + keyWithDesc);\n    }\n  }\n  customCompletion(args, argv, current, done) {\n    assertNotStrictEqual(this.customCompletionFunction, null, this.shim);\n    if (isSyncCompletionFunction(this.customCompletionFunction)) {\n      const result = this.customCompletionFunction(current, argv);\n      if (isPromise(result)) {\n        return result.then(list => {\n          this.shim.process.nextTick(() => {\n            done(null, list);\n          });\n        }).catch(err => {\n          this.shim.process.nextTick(() => {\n            done(err, undefined);\n          });\n        });\n      }\n      return done(null, result);\n    } else if (isFallbackCompletionFunction(this.customCompletionFunction)) {\n      return this.customCompletionFunction(current, argv, (onCompleted = done) => this.defaultCompletion(args, argv, current, onCompleted), completions => {\n        done(null, completions);\n      });\n    } else {\n      return this.customCompletionFunction(current, argv, completions => {\n        done(null, completions);\n      });\n    }\n  }\n  getCompletion(args, done) {\n    const current = args.length ? args[args.length - 1] : '';\n    const argv = this.yargs.parse(args, true);\n    const completionFunction = this.customCompletionFunction ? argv => this.customCompletion(args, argv, current, done) : argv => this.defaultCompletion(args, argv, current, done);\n    return isPromise(argv) ? argv.then(completionFunction) : completionFunction(argv);\n  }\n  generateCompletionScript($0, cmd) {\n    let script = this.zshShell ? templates.completionZshTemplate : templates.completionShTemplate;\n    const name = this.shim.path.basename($0);\n    if ($0.match(/\\.js$/)) $0 = `./${$0}`;\n    script = script.replace(/{{app_name}}/g, name);\n    script = script.replace(/{{completion_command}}/g, cmd);\n    return script.replace(/{{app_path}}/g, $0);\n  }\n  registerFunction(fn) {\n    this.customCompletionFunction = fn;\n  }\n  setParsed(parsed) {\n    this.aliases = parsed.aliases;\n  }\n}\nexport function completion(yargs, usage, command, shim) {\n  return new Completion(yargs, usage, command, shim);\n}\nfunction isSyncCompletionFunction(completionFunction) {\n  return completionFunction.length < 3;\n}\nfunction isFallbackCompletionFunction(completionFunction) {\n  return completionFunction.length > 3;\n}","map":{"version":3,"names":["isCommandBuilderCallback","assertNotStrictEqual","templates","isPromise","parseCommand","Completion","constructor","yargs","usage","command","shim","_a","_b","_c","completionKey","aliases","customCompletionFunction","indexAfterLastReset","zshShell","getEnv","includes","defaultCompletion","args","argv","current","done","handlers","getCommandHandlers","i","ii","length","builder","y","getInternalMethods","reset","completions","commandCompletions","optionCompletions","choicesFromOptionsCompletions","choicesFromPositionalsCompletions","parentCommands","getContext","commands","match","previousArgHasChoices","getCommands","forEach","usageCommand","commandName","cmd","indexOf","push","desc","replace","options","getOptions","positionalKeys","getGroups","getPositionalGroupName","Object","keys","key","negable","configuration","boolean","isPositionalKey","hiddenOptions","argsContainKey","completeOptionKey","default","choices","getPreviousArgChoices","map","c","offset","Math","max","positionalKey","_","choice","startsWith","previousArg","filter","previousArgKey","possibleAliases","getAliases","possibleAlias","prototype","hasOwnProperty","call","Array","isArray","undefined","argsContains","s","test","alias","_d","keyWithDesc","descs","getDescriptions","aliasKey","find","descFromAlias","startsByTwoDashes","isShortOption","dashes","customCompletion","isSyncCompletionFunction","result","then","list","process","nextTick","catch","err","isFallbackCompletionFunction","onCompleted","getCompletion","parse","completionFunction","generateCompletionScript","$0","script","completionZshTemplate","completionShTemplate","name","path","basename","registerFunction","fn","setParsed","parsed","completion"],"sources":["/Users/kseniavoronova/today-i-learned-react/node_modules/yargs/build/lib/completion.js"],"sourcesContent":["import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport class Completion {\n    constructor(yargs, usage, command, shim) {\n        var _a, _b, _c;\n        this.yargs = yargs;\n        this.usage = usage;\n        this.command = command;\n        this.shim = shim;\n        this.completionKey = 'get-yargs-completions';\n        this.aliases = null;\n        this.customCompletionFunction = null;\n        this.indexAfterLastReset = 0;\n        this.zshShell =\n            (_c = (((_a = this.shim.getEnv('SHELL')) === null || _a === void 0 ? void 0 : _a.includes('zsh')) ||\n                ((_b = this.shim.getEnv('ZSH_NAME')) === null || _b === void 0 ? void 0 : _b.includes('zsh')))) !== null && _c !== void 0 ? _c : false;\n    }\n    defaultCompletion(args, argv, current, done) {\n        const handlers = this.command.getCommandHandlers();\n        for (let i = 0, ii = args.length; i < ii; ++i) {\n            if (handlers[args[i]] && handlers[args[i]].builder) {\n                const builder = handlers[args[i]].builder;\n                if (isCommandBuilderCallback(builder)) {\n                    this.indexAfterLastReset = i + 1;\n                    const y = this.yargs.getInternalMethods().reset();\n                    builder(y, true);\n                    return y.argv;\n                }\n            }\n        }\n        const completions = [];\n        this.commandCompletions(completions, args, current);\n        this.optionCompletions(completions, args, argv, current);\n        this.choicesFromOptionsCompletions(completions, args, argv, current);\n        this.choicesFromPositionalsCompletions(completions, args, argv, current);\n        done(null, completions);\n    }\n    commandCompletions(completions, args, current) {\n        const parentCommands = this.yargs\n            .getInternalMethods()\n            .getContext().commands;\n        if (!current.match(/^-/) &&\n            parentCommands[parentCommands.length - 1] !== current &&\n            !this.previousArgHasChoices(args)) {\n            this.usage.getCommands().forEach(usageCommand => {\n                const commandName = parseCommand(usageCommand[0]).cmd;\n                if (args.indexOf(commandName) === -1) {\n                    if (!this.zshShell) {\n                        completions.push(commandName);\n                    }\n                    else {\n                        const desc = usageCommand[1] || '';\n                        completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n                    }\n                }\n            });\n        }\n    }\n    optionCompletions(completions, args, argv, current) {\n        if ((current.match(/^-/) || (current === '' && completions.length === 0)) &&\n            !this.previousArgHasChoices(args)) {\n            const options = this.yargs.getOptions();\n            const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n            Object.keys(options.key).forEach(key => {\n                const negable = !!options.configuration['boolean-negation'] &&\n                    options.boolean.includes(key);\n                const isPositionalKey = positionalKeys.includes(key);\n                if (!isPositionalKey &&\n                    !options.hiddenOptions.includes(key) &&\n                    !this.argsContainKey(args, key, negable)) {\n                    this.completeOptionKey(key, completions, current, negable && !!options.default[key]);\n                }\n            });\n        }\n    }\n    choicesFromOptionsCompletions(completions, args, argv, current) {\n        if (this.previousArgHasChoices(args)) {\n            const choices = this.getPreviousArgChoices(args);\n            if (choices && choices.length > 0) {\n                completions.push(...choices.map(c => c.replace(/:/g, '\\\\:')));\n            }\n        }\n    }\n    choicesFromPositionalsCompletions(completions, args, argv, current) {\n        if (current === '' &&\n            completions.length > 0 &&\n            this.previousArgHasChoices(args)) {\n            return;\n        }\n        const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n        const offset = Math.max(this.indexAfterLastReset, this.yargs.getInternalMethods().getContext().commands.length +\n            1);\n        const positionalKey = positionalKeys[argv._.length - offset - 1];\n        if (!positionalKey) {\n            return;\n        }\n        const choices = this.yargs.getOptions().choices[positionalKey] || [];\n        for (const choice of choices) {\n            if (choice.startsWith(current)) {\n                completions.push(choice.replace(/:/g, '\\\\:'));\n            }\n        }\n    }\n    getPreviousArgChoices(args) {\n        if (args.length < 1)\n            return;\n        let previousArg = args[args.length - 1];\n        let filter = '';\n        if (!previousArg.startsWith('-') && args.length > 1) {\n            filter = previousArg;\n            previousArg = args[args.length - 2];\n        }\n        if (!previousArg.startsWith('-'))\n            return;\n        const previousArgKey = previousArg.replace(/^-+/, '');\n        const options = this.yargs.getOptions();\n        const possibleAliases = [\n            previousArgKey,\n            ...(this.yargs.getAliases()[previousArgKey] || []),\n        ];\n        let choices;\n        for (const possibleAlias of possibleAliases) {\n            if (Object.prototype.hasOwnProperty.call(options.key, possibleAlias) &&\n                Array.isArray(options.choices[possibleAlias])) {\n                choices = options.choices[possibleAlias];\n                break;\n            }\n        }\n        if (choices) {\n            return choices.filter(choice => !filter || choice.startsWith(filter));\n        }\n    }\n    previousArgHasChoices(args) {\n        const choices = this.getPreviousArgChoices(args);\n        return choices !== undefined && choices.length > 0;\n    }\n    argsContainKey(args, key, negable) {\n        const argsContains = (s) => args.indexOf((/^[^0-9]$/.test(s) ? '-' : '--') + s) !== -1;\n        if (argsContains(key))\n            return true;\n        if (negable && argsContains(`no-${key}`))\n            return true;\n        if (this.aliases) {\n            for (const alias of this.aliases[key]) {\n                if (argsContains(alias))\n                    return true;\n            }\n        }\n        return false;\n    }\n    completeOptionKey(key, completions, current, negable) {\n        var _a, _b, _c, _d;\n        let keyWithDesc = key;\n        if (this.zshShell) {\n            const descs = this.usage.getDescriptions();\n            const aliasKey = (_b = (_a = this === null || this === void 0 ? void 0 : this.aliases) === null || _a === void 0 ? void 0 : _a[key]) === null || _b === void 0 ? void 0 : _b.find(alias => {\n                const desc = descs[alias];\n                return typeof desc === 'string' && desc.length > 0;\n            });\n            const descFromAlias = aliasKey ? descs[aliasKey] : undefined;\n            const desc = (_d = (_c = descs[key]) !== null && _c !== void 0 ? _c : descFromAlias) !== null && _d !== void 0 ? _d : '';\n            keyWithDesc = `${key.replace(/:/g, '\\\\:')}:${desc\n                .replace('__yargsString__:', '')\n                .replace(/(\\r\\n|\\n|\\r)/gm, ' ')}`;\n        }\n        const startsByTwoDashes = (s) => /^--/.test(s);\n        const isShortOption = (s) => /^[^0-9]$/.test(s);\n        const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n        completions.push(dashes + keyWithDesc);\n        if (negable) {\n            completions.push(dashes + 'no-' + keyWithDesc);\n        }\n    }\n    customCompletion(args, argv, current, done) {\n        assertNotStrictEqual(this.customCompletionFunction, null, this.shim);\n        if (isSyncCompletionFunction(this.customCompletionFunction)) {\n            const result = this.customCompletionFunction(current, argv);\n            if (isPromise(result)) {\n                return result\n                    .then(list => {\n                    this.shim.process.nextTick(() => {\n                        done(null, list);\n                    });\n                })\n                    .catch(err => {\n                    this.shim.process.nextTick(() => {\n                        done(err, undefined);\n                    });\n                });\n            }\n            return done(null, result);\n        }\n        else if (isFallbackCompletionFunction(this.customCompletionFunction)) {\n            return this.customCompletionFunction(current, argv, (onCompleted = done) => this.defaultCompletion(args, argv, current, onCompleted), completions => {\n                done(null, completions);\n            });\n        }\n        else {\n            return this.customCompletionFunction(current, argv, completions => {\n                done(null, completions);\n            });\n        }\n    }\n    getCompletion(args, done) {\n        const current = args.length ? args[args.length - 1] : '';\n        const argv = this.yargs.parse(args, true);\n        const completionFunction = this.customCompletionFunction\n            ? (argv) => this.customCompletion(args, argv, current, done)\n            : (argv) => this.defaultCompletion(args, argv, current, done);\n        return isPromise(argv)\n            ? argv.then(completionFunction)\n            : completionFunction(argv);\n    }\n    generateCompletionScript($0, cmd) {\n        let script = this.zshShell\n            ? templates.completionZshTemplate\n            : templates.completionShTemplate;\n        const name = this.shim.path.basename($0);\n        if ($0.match(/\\.js$/))\n            $0 = `./${$0}`;\n        script = script.replace(/{{app_name}}/g, name);\n        script = script.replace(/{{completion_command}}/g, cmd);\n        return script.replace(/{{app_path}}/g, $0);\n    }\n    registerFunction(fn) {\n        this.customCompletionFunction = fn;\n    }\n    setParsed(parsed) {\n        this.aliases = parsed.aliases;\n    }\n}\nexport function completion(yargs, usage, command, shim) {\n    return new Completion(yargs, usage, command, shim);\n}\nfunction isSyncCompletionFunction(completionFunction) {\n    return completionFunction.length < 3;\n}\nfunction isFallbackCompletionFunction(completionFunction) {\n    return completionFunction.length > 3;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}